(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    301744,       6867]
NotebookOptionsPosition[    299740,       6816]
NotebookOutlinePosition[    300234,       6834]
CellTagsIndexPosition[    300191,       6831]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pandemic simulator (v.0.5)", "Section",
 CellID->296662264,ExpressionUUID->"2daafac9-dd3f-47a6-8226-e0800096b956"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->693897941,ExpressionUUID->"418b604f-03a8-419b-8d72-c96d61e7140d"],

Cell[CellGroupData[{

Cell["graphs", "Subsection",
 CellID->86006341,ExpressionUUID->"40225388-41b4-40a1-bccd-344d6ac3b167"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "List", " ", "of", " ", "every", " ", "nodes", " ", "neighbour", " ", 
    "list"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"neighboursOfVerticesList", ":=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NeighborhoodGraph", "[", 
           RowBox[{"#", ",", "node"}], "]"}], "//", "VertexList"}], ",", 
         RowBox[{"{", "node", "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"node", ",", 
         RowBox[{"#", "//", "VertexList"}]}], "}"}]}], "]"}], "&"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Largest", " ", "subgraph", " ", "of", " ", "given"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"largestSubgraph", ":=", 
    RowBox[{
     RowBox[{"Subgraph", "[", 
      RowBox[{"#", ",", 
       RowBox[{"First", "[", 
        RowBox[{"ConnectedComponents", "[", "#", "]"}], "]"}]}], "]"}], 
     "&"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Creates", " ", "random", " ", "links", " ", "between", " ", "nodes"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"gridBasedSW", ":=", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"base", " ", "=", "#"}], ",", "temp", ",", "length", ",", 
         "drawPool"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"base", "//", "EdgeList"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"length", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"base", "//", "VertexList"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "for", " ", "each", " ", "edge", " ", "take", " ", "the", " ", 
            "vertex", " ", 
            RowBox[{"from", " ", "'"}], "the", " ", 
            RowBox[{"left", "'"}]}], "..."}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "#2"}], ",", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"...", " ", "with", " ", "probability", " ", "\[Rho]"}],
               "..."}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "...", "and", " ", "find", " ", "vertices", " ", "to", " ", 
               "which", " ", "it", " ", "so", " ", "far", " ", 
               RowBox[{"wasn", "'"}], "t", " ", "connected"}], "..."}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"drawPool", "=", 
              RowBox[{"Complement", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Range", "[", "length", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"AdjacencyList", "[", 
                 RowBox[{"temp", ",", 
                  RowBox[{"temp", "\[LeftDoubleBracket]", 
                   RowBox[{"edgeInd", ",", "1"}], "\[RightDoubleBracket]"}]}],
                  "]"}]}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"NeighborhoodGraph", "[", 
                    RowBox[{"temp", ",", 
                    RowBox[{"temp", "\[LeftDoubleBracket]", 
                    RowBox[{"edgeInd", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "//", "VertexList"}], 
                  ")"}], ","}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"{", 
                 RowBox[{"temp", "\[LeftDoubleBracket]", 
                  RowBox[{"edgeInd", ",", "2"}], "\[RightDoubleBracket]"}], 
                 "}"}], "*)"}], "\[IndentingNewLine]", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "drawPool", "]"}], ">", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "...", " ", "then", " ", "connect", " ", "it", " ", "with", 
                 " ", "randomly", " ", "choosen", " ", 
                 RowBox[{"one", "."}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"temp", "\[LeftDoubleBracket]", 
                 RowBox[{"edgeInd", ",", "2"}], "\[RightDoubleBracket]"}], 
                "=", 
                RowBox[{"RandomChoice", "[", "drawPool", "]"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"Continue", "[", "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"edgeInd", ",", 
            RowBox[{
             RowBox[{"temp", "//", "EdgeList"}], "//", "Length"}]}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", "//", 
         RowBox[{
          RowBox[{"Graph", "[", 
           RowBox[{
            RowBox[{"Range", "[", "length", "]"}], ",", "#", ",", 
            RowBox[{"GraphLayout", "\[Rule]", "\"\<GridEmbedding\>\""}]}], 
           "]"}], "&"}]}]}]}], "\[IndentingNewLine]", "]"}], "&"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeHoles", "[", 
      RowBox[{"graph_Graph", ",", "count_Integer", ",", 
       RowBox[{"maxSize_Integer", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Subgraph", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", "#", "]"}], ",", 
            RowBox[{"VertexList", "[", 
             RowBox[{"NeighborhoodGraph", "[", 
              RowBox[{"#", ",", 
               RowBox[{"RandomSample", "[", 
                RowBox[{
                 RowBox[{"VertexList", "[", "#", "]"}], ",", "1"}], "]"}], 
               ",", "maxSize"}], "]"}], "]"}]}], "]"}]}], "]"}], "&"}], ",", 
       "graph", ",", "count"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "used", " ", "to", " ", "keep", " ", "current", " ", "layout", " ", 
     "after", " ", "performing", " ", "function", " ", "fun", " ", "on", " ", 
     
     RowBox[{"graph", ".", " ", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
       "may", " ", "not", " ", "work", " ", "if", " ", "new", " ", "vertices",
         " ", "are", " ", "added", " ", "or", " ", "are", " ", 
        "reordered"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"KeepLayout", "[", 
      RowBox[{"graph_Graph", ",", "fun_", ",", "funParams___"}], "]"}], ":=", 
     
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coords", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"fun", "[", 
          RowBox[{"graph", ",", "funParams"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"coords", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "->", 
             RowBox[{"PropertyValue", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"graph", ",", "#"}], "}"}], ",", 
               "VertexCoordinates"}], "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"VertexList", "[", "g", "]"}]}]}], ";", 
        RowBox[{"Graph", "[", 
         RowBox[{"g", ",", 
          RowBox[{"VertexCoordinates", "\[Rule]", "coords"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"uniformly", " ", "random", " ", "graph"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"uniform", ":=", 
    RowBox[{
     RowBox[{"RandomGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#1", ",", 
         RowBox[{"#1", " ", "#3"}]}], "}"}], ",", 
       RowBox[{"GraphLayout", "\[Rule]", "\"\<GridEmbedding\>\""}]}], "]"}], 
     "&"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"lattice", " ", "2", "D"}], "-", "graph"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"grid", ":=", 
    RowBox[{
     RowBox[{"GridGraph", "[", 
      RowBox[{"{", 
       RowBox[{
        SqrtBox["#1"], ",", 
        SqrtBox["#1"]}], "}"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Scale", "-", 
     RowBox[{"free", " ", "graph"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaleFree", ":=", 
     RowBox[{
      RowBox[{"RandomGraph", "[", 
       RowBox[{
        RowBox[{"BarabasiAlbertGraphDistribution", "[", 
         RowBox[{"#1", ",", "#3"}], "]"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<GridEmbedding\>\""}]}], "]"}], 
      "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Small", " ", "World", " ", "graph", " ", 
     RowBox[{"(", 
      RowBox[{"Watts", "-", "Stogratz"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"smallWorld", ":=", 
     RowBox[{
      RowBox[{"RandomGraph", "[", 
       RowBox[{
        RowBox[{"WattsStrogatzGraphDistribution", "[", 
         RowBox[{"#1", ",", "#2", ",", "#3"}], "]"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<GridEmbedding\>\""}]}], "]"}], 
      "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"smallWorld2", ":=", 
     RowBox[{
      RowBox[{"gridBasedSW", "[", 
       RowBox[{
        RowBox[{"grid", "[", "#1", "]"}], ",", "#2"}], "]"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"holedGrid", ":=", 
     RowBox[{
      RowBox[{"KeepLayout", "[", 
       RowBox[{
        RowBox[{"grid", "[", "#1", "]"}], ",", "MakeHoles", ",", "#3", ",", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerPart", "[", 
            RowBox[{
             SqrtBox["#1"], "/", "3"}], "]"}], "-", "#3"}], ",", "1"}], 
         "]"}]}], "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"advGrid", ":=", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pts", ",", "distances"}], "}"}], ",", 
        RowBox[{
         RowBox[{"pts", "=", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             SqrtBox["#1"], "]"}], ",", "2"}], "]"}]}], ";", "\n", 
         RowBox[{"distances", "=", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tr", "=", 
              RowBox[{"N", "@", 
               RowBox[{"Transpose", "[", "pts", "]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{"point", ",", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"point", "-", "tr"}], ")"}], "^", "2"}], "]"}], 
                "]"}]}], "]"}], "/@", "pts"}]}], "]"}]}], ";", "\n", 
         RowBox[{"SimpleGraph", "[", 
          RowBox[{
           RowBox[{"AdjacencyGraph", "@", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"#3", "-", "distances"}], "]"}]}], ",", 
           RowBox[{"VertexCoordinates", "\[Rule]", "pts"}]}], "]"}]}]}], 
       "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"regular2k", ":=", 
     RowBox[{
      RowBox[{"CirculantGraph", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Range", "[", "#3", "]"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<GridEmbedding\>\""}]}], "]"}], 
      "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"get", " ", "graph", " ", "without", " ", "self", " ", "loops"}],
      ",", " ", 
     RowBox[{"then", " ", "largest", " ", "subgraph"}], ",", " ", 
     RowBox[{"then", " ", "reindex"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphPostprocess", ":=", 
     RowBox[{
      RowBox[{"IndexGraph", "@", 
       RowBox[{"largestSubgraph", "@", 
        RowBox[{"SimpleGraph", "[", "#", "]"}]}]}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"notAv", "=", "\"\<Not available in this network type\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"EDIT", " ", "THIS", " ", "TO", " ", "ADD", " ", 
     RowBox[{"GRAPHS", "!"}], " ", "graphs", " ", "and", " ", "params", " ", 
     "each", " ", "graph", " ", "should", " ", "enable", " ", "in", " ", 
     "order", " ", 
     RowBox[{"{", 
      RowBox[{
      "graph", ",", " ", "\[Rho]", ",", " ", "k", ",", " ", "communityPlot", 
       ",", " ", 
       RowBox[{"\[Rho]", " ", "description"}], ",", " ", 
       RowBox[{"k", " ", "description"}], ",", " ", 
       RowBox[{"graph", " ", "type", " ", "description"}]}], "}"}]}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"graphsInfo", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Grid\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "grid", ",", "False", ",", "False", ",", "False", ",", "notAv", ",", 
          "notAv", ",", 
          "\"\<Lattice network of edge \!\(\*SqrtBox[\(n\)]\).\\nSee \
GridGraph in Mathematica.\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Scale-Free\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "scaleFree", ",", "False", ",", "True", ",", "True", ",", "notAv", 
          ",", 
          "\"\<Influences how many edges each new vertex will have during \
network construction. \>\"", ",", 
          "\"\<Random network built on top of 3-vertex cycle graph.\\nSee \
BarabasiAlbertGraphDistribution in Mathematica.\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Small-World (WS)\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "smallWorld", ",", "True", ",", "True", ",", "True", ",", 
          "\"\<Probability of edge rewiring during network construction. \
Makes possibility of long range connections.\>\"", ",", 
          "\"\<Half the mean number of target neighbours.\>\"", ",", 
          "\"\<Random network based on 2k\[Dash]regular graph.\\nSee \
WattsStrogatzGraphDistribution in Mathematica.\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Small-World (KM)\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "smallWorld2", ",", "True", ",", "False", ",", "True", ",", 
          "\"\<Probability of changing the edges that connect vertices during \
construction.\>\"", ",", "notAv", ",", 
          "\"\<Random network based on grid graph.\\nSee gridBasedSW function \
definition.\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Holed Grid\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "holedGrid", ",", "False", ",", "True", ",", "False", ",", "notAv", 
          ",", "\"\<Number of ruby-shaped holes (disk in manhattan-like \
metric) in the Grid Graph. Their size is automatically adjusted to their \
count.\>\"", ",", 
          "\"\<Random network based on grid graph with some vertices removed.\
\\nSee holedGrid function definition.\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<Random\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "uniform", ",", "False", ",", "True", ",", "True", ",", "notAv", 
          ",", "\"\<Mean number of edges per vertex, before discarding \
isolated nodes.\>\"", ",", 
          "\"\<Random network.\\nSee RandomGraph in Mathematica.\>\""}], 
         "}"}]}], ",", 
       RowBox[{"\"\<k-Grid\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "advGrid", ",", "False", ",", "True", ",", "False", ",", "notAv", 
          ",", "\"\<Connect all neighbours up to distance k.\>\"", ",", 
          "\"\<Lattice network with k nearest neighbours.\\nSee advGrid \
function definition.\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<2k-regular\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "regular2k", ",", "False", ",", "True", ",", "False", ",", "notAv", 
          ",", "\"\<Connect all neighbours up to distance k.\>\"", ",", 
          "\"\<Circular network with k nearest neighbours.\\nSee \
CirculantGraph in Mathematica.\>\""}], "}"}]}]}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graphs", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "graphsInfo", "]"}], ",", 
       RowBox[{"First", "/@", 
        RowBox[{"Values", "[", "graphsInfo", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rhoEnabled", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "graphsInfo", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "graphsInfo", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kEnabled", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "graphsInfo", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "graphsInfo", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"commEnabled", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "graphsInfo", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "graphsInfo", "]"}]}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]Tooltip", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "graphsInfo", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "graphsInfo", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kTooltip", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "graphsInfo", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "graphsInfo", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graphTooltip", "=", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "graphsInfo", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "7", "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "graphsInfo", "]"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8229294140250793`*^9, 3.822929420327162*^9}},
 CellLabel->"In[2]:=",
 CellID->1989140556,ExpressionUUID->"6e4ea6bc-4f04-4f8a-a766-5b6dee44e2b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["lockdowns", "Subsection",
 CellID->712631908,ExpressionUUID->"0034a69a-780d-4abf-a56b-0cc11f1cf442"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "To", " ", "implement", " ", "a", " ", "new", " ", "lockdown", " ", 
      "strategy", " ", "follow", " ", "the", " ", "template", " ", "below", 
      "\[IndentingNewLine]", "history", " ", "should", " ", "contain", " ", 
      "a", " ", "list", " ", "of", " ", 
      RowBox[{"{", 
       RowBox[{"step", ",", "val", ",", "active"}], "}"}], " ", 
      RowBox[{"where", ":"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"step", ":", " ", 
      RowBox[{"is", " ", "the", " ", "integer", " ", "passed"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"val", ":", " ", 
      RowBox[{"the", " ", "result", " ", "of", " ", "Fun"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"active", ":", " ", 
      RowBox[{
      "true", " ", "if", " ", "threshold", " ", "is", " ", "surpased"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
     "Of", " ", "course", " ", "you", " ", "can", " ", "define", " ", 
      "additional", " ", "keys", " ", "if", " ", "you", " ", "like"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"as", " ", "long", " ", "as", " ", "this", " ", 
       RowBox[{"doesn", "'"}], "t", " ", "break"}], " ", ";"}]}], ")"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lockdownStrategyTemplate", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"Fun", "\[Rule]", 
        RowBox[{"Fun", "[", 
         RowBox[{"currentState", ",", "history", ",", "size"}], "]"}]}], ",", 
       
       RowBox[{"threshold", "\[Rule]", "thresholdValue"}], ",", 
       RowBox[{"history", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "returns", " ", "an", " ", "updated", " ", "lockdownStrategyObject"}], 
     " ", "-", " ", 
     RowBox[{
     "this", " ", "function", " ", "will", " ", "not", " ", "be", " ", 
      "used"}]}], ",", " ", 
    RowBox[{
    "the", " ", "body", " ", "is", " ", "embedded", " ", "in", " ", 
     "simulation", " ", 
     RowBox[{"(", 
      RowBox[{"so", " ", "we", " ", "get", " ", "less", " ", "calls"}], 
      ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ApplyLockdownStrategy", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"step_", ",", "list_", ",", "size_"}], "}"}], ",", 
       "lockdownStrategy_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ls", ",", "val"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ls", "=", "lockdownStrategy"}], ";", "\[IndentingNewLine]", 
        RowBox[{"val", "=", 
         RowBox[{
          RowBox[{"lockdownStrategy", "[", "Fun", "]"}], "[", 
          RowBox[{"list", ",", 
           RowBox[{"ls", "[", "history", "]"}], ",", "size"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"ls", "[", "history", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"step", ",", "val", ",", 
            RowBox[{"val", ">", 
             RowBox[{"ls", "[", "threshold", "]"}]}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "ls"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "strategy", " ", "simply", " ", "counts", " ", "detected"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lsDetCount", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"Fun", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"#1", ",", "2"}], "]"}], "/", "#3"}], "&"}], ")"}]}], ",", 
       RowBox[{"threshold", "\[Rule]", "0.01"}], ",", 
       RowBox[{"history", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Checks", " ", "the", " ", "normalized", " ", "change", " ", "in", " ", 
     "detected", " ", "from", " ", "last", " ", "step", " ", "and", " ", 
     "applies", " ", "lockdown", " ", "if", " ", "the", " ", "normalized", 
     " ", "change", " ", "has", " ", "increased", " ", "more", " ", "than", 
     " ", "threshold"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsDetChangeSmall", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"Fun", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#2", "]"}], ">", "0"}], ",", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], ",", 
            FractionBox[
             RowBox[{"Count", "[", 
              RowBox[{"#1", ",", "2"}], "]"}], "#3"]}], "]"}], "&"}], ")"}]}],
        ",", 
       RowBox[{"threshold", "\[Rule]", "0.01"}], ",", 
       RowBox[{"history", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsDetChangeLarge", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"Fun", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#2", "]"}], ">", "0"}], ",", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], ",", 
            FractionBox[
             RowBox[{"Count", "[", 
              RowBox[{"#1", ",", "2"}], "]"}], "#3"]}], "]"}], "&"}], ")"}]}],
        ",", 
       RowBox[{"threshold", "\[Rule]", "0.1"}], ",", 
       RowBox[{"history", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<At \>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<% detected\>\""}], 
         "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"Fun", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Count", "[", 
                RowBox[{"#1", ",", "2"}], "]"}], "/", "#3"}], "&"}], ")"}]}], 
           ",", 
           RowBox[{"threshold", "\[Rule]", 
            RowBox[{"i", "/", "100"}]}], ",", 
           RowBox[{"history", "\[Rule]", 
            RowBox[{"{", "}"}]}]}], "|>"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "5", ",", "10", ",", "15"}], "}"}]}], 
         "}"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"EDIT", " ", "THIS", " ", "TO", " ", "ADD", " ", "LOCKDOWN", " ", 
      RowBox[{"STRATEGIES", "!"}], " ", "name"}], "\[Rule]", " ", 
     RowBox[{"lockdownStrategy", ".", " ", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
       "functions", " ", "need", " ", "to", " ", "be", " ", "surronded", " ", 
        "by", " ", "normal", " ", "brackets"}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsStrategies", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<At 1% detected\>\"", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"Fun", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "&"}], ")"}]}], ",", 
          RowBox[{"threshold", "\[Rule]", 
           FractionBox["1", "100"]}], ",", 
          RowBox[{"history", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{"\"\<At 2% detected\>\"", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"Fun", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "&"}], ")"}]}], ",", 
          RowBox[{"threshold", "\[Rule]", 
           FractionBox["1", "50"]}], ",", 
          RowBox[{"history", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{"\"\<At 5% detected\>\"", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"Fun", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "&"}], ")"}]}], ",", 
          RowBox[{"threshold", "\[Rule]", 
           FractionBox["1", "20"]}], ",", 
          RowBox[{"history", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{"\"\<At 10% detected\>\"", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"Fun", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "&"}], ")"}]}], ",", 
          RowBox[{"threshold", "\[Rule]", 
           FractionBox["1", "10"]}], ",", 
          RowBox[{"history", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{"\"\<At 15% detected\>\"", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"Fun", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "&"}], ")"}]}], ",", 
          RowBox[{"threshold", "\[Rule]", 
           FractionBox["3", "20"]}], ",", 
          RowBox[{"history", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{"\"\<At 50% detected\>\"", "\[Rule]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"Fun", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"Count", "[", 
               RowBox[{"#1", ",", "2"}], "]"}], "#3"], "&"}], ")"}]}], ",", 
          RowBox[{"threshold", "\[Rule]", 
           RowBox[{"1", "/", "2"}]}], ",", 
          RowBox[{"history", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]}], ",", 
       RowBox[{
       "\"\<At small change of detected\>\"", "->", "lsDetChangeSmall"}], ",", 
       RowBox[{
       "\"\<At large change of detected\>\"", "->", "lsDetChangeLarge"}]}], 
      "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "This", " ", "function", " ", "looks", " ", "for", " ", "the", " ", 
      "first", " ", "moment", " ", "when", " ", "to", " ", "activate", " ", 
      "lockdown"}], ",", " ", 
     RowBox[{"strat", " ", "is", " ", "a", " ", "lockdownStrategy"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstLockdownStep", "[", 
      RowBox[{"strat_", ",", "courseOfEpidemics_", ",", "size_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"history", ",", 
         RowBox[{"ls", "=", "strat"}], ",", 
         RowBox[{"lockActive", "=", "False"}], ",", "val", ",", 
         RowBox[{"j", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"!", "lockActive"}], "&&", 
           RowBox[{"j", "<", 
            RowBox[{"Length", "[", "courseOfEpidemics", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"j", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"val", "=", 
            RowBox[{
             RowBox[{"ls", "[", "Fun", "]"}], "[", 
             RowBox[{
              RowBox[{"courseOfEpidemics", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", 
              RowBox[{"ls", "[", "history", "]"}], ",", "size"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"lockActive", "=", 
            RowBox[{"val", ">", 
             RowBox[{"ls", "[", "threshold", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{
             RowBox[{"ls", "[", "history", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "val", ",", "lockActive"}], "}"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"courseOfEpidemics", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}]}]}]], "Input",
 CellLabel->"In[25]:=",
 CellID->1446934205,ExpressionUUID->"e1aa20d1-a09e-4953-973f-84f38367dcd6"]
}, Closed]],

Cell[CellGroupData[{

Cell["simulation and plots", "Subsection",
 CellID->374282962,ExpressionUUID->"3fea614d-76a3-44bf-9948-7b1b442e61b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"simulation", "[", 
    RowBox[{
    "net_Graph", ",", "initialList_List", ",", "\[Lambda]_", ",", "g_", ",", 
     "d_", ",", "o_", ",", 
     RowBox[{"detCanInfect_", ":", "True"}], ",", 
     RowBox[{"lockStrategy_", ":", "None"}], ",", 
     RowBox[{"tmax_", ":", "200"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"network", "=", "net"}], ",", "size", ",", "neighbours", ",", 
       "det", ",", "inf", ",", "cases", ",", "tcourse", ",", "EndCondition", 
       ",", "UpdateConditions", ",", 
       RowBox[{"ls", "=", "lockStrategy"}], ",", "tmp", ",", "val", ",", 
       RowBox[{"lockActive", "=", "False"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"lockCheck", "[", 
         RowBox[{"lock_Integer", ",", "i_Integer"}], "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lock", "===", "1"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "lockdowns", "]"}], ">", "0"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"lockdowns", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "+", "lockLen"}], ">", 
           "i"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lockGath", "[", "i_Integer", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"lockTh", "=!=", "None"}], "&&", 
            RowBox[{
             RowBox[{"det", "/", "size"}], ">", 
             RowBox[{"lockTh", "/", "100.0"}]}]}], ")"}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"lockdowns", ",", "i"}], "]"}], ";"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lockCond", ":=", 
        RowBox[{"lockTh", "=!=", "None"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"UpdInf", "[", "list_List", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"inf", "=", 
           RowBox[{"Count", "[", 
            RowBox[{"list", ",", "1"}], "]"}]}], ";", "list"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"UpdInfLock", "[", "list_List", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"infLock", "=", 
           RowBox[{"Count", "[", 
            RowBox[{"list", ",", "1"}], "]"}]}], ";", "list"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"UpdDet", "[", "list_List", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"det", "=", 
           RowBox[{"Count", "[", 
            RowBox[{"list", ",", "2"}], "]"}]}], ";", "list"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"UpdDetLock", "[", "list_List", "]"}], ":=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"detLock", "=", 
           RowBox[{"Count", "[", 
            RowBox[{"list", ",", "2"}], "]"}]}], ";", "list"}], ")"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"size", "=", 
       RowBox[{"network", "//", "VertexCount"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"neighbours", "=", 
       RowBox[{"network", "//", "neighboursOfVerticesList"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EndCondition", ":=", 
       RowBox[{
        RowBox[{"inf", "===", "0"}], "&&", 
        RowBox[{"det", "===", "0"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"UpdateConditions", "[", "list_List", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"inf", "=", 
          RowBox[{"Count", "[", 
           RowBox[{"list", ",", "1"}], "]"}]}], ";", 
         RowBox[{"det", "=", 
          RowBox[{"Count", "[", 
           RowBox[{"list", ",", "2"}], "]"}]}], ";", "list"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cases", "[", 
        RowBox[{"i_Integer", ",", "j_Integer"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"cases", "[", 
         RowBox[{"i", ",", "j"}], "]"}], "=", "\[IndentingNewLine]", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"cases", "[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", "j"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", "Infected", "*)"}], "\[IndentingNewLine]", "1", ",", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"g", ",", "d", ",", 
              RowBox[{"1", "-", "g", "-", "d"}]}], "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"4", ",", "5", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", "]"}], "<", "o"}], ",", "2", ",", 
                "1"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"recover", ",", 
            RowBox[{
            "die", " ", "if", " ", "not", " ", "detected", " ", "or", " ", 
             "just", " ", "still", " ", "infected"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", "Detected", "*)"}], "\[IndentingNewLine]", "2", ",", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"g", ",", "d", ",", 
              RowBox[{"1", "-", "g", "-", "d"}]}], "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"4", ",", "5", ",", "2"}], "}"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"recover", ",", 
            RowBox[{"die", " ", "or", " ", "stay", " ", "detected"}]}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", "Susceptible", "*)"}], "\[IndentingNewLine]", "3", 
          ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], ">", 
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"cases", "[", 
                   RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "u"}], "]"}], "<", 
                  RowBox[{"If", "[", 
                   RowBox[{"detCanInfect", ",", "3", ",", "2"}], "]"}]}], ",", 
                 RowBox[{"1", "-", "\[Lambda]"}], ",", "1"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{"lockActive", ",", 
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"neighbours", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "}"}]}], 
              "]"}]}], ",", "1", ",", "3"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "become", " ", "infected", " ", "or", " ", "stay", " ", "sus"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", "Recovered", "*)"}], "4", ",", "4", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", "Dead", "*)"}], "5", ",", "5"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Initially", " ", "everyone", " ", "is", " ", "susceptible"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"cases", "[", 
             RowBox[{"1", ",", "#"}], "]"}], "=", "3"}], "}"}], "&"}], "/@", 
         RowBox[{"Range", "[", "size", "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"inf", "=", 
       RowBox[{"Count", "[", 
        RowBox[{"initialList", ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"det", "=", 
       RowBox[{"Count", "[", 
        RowBox[{"initialList", ",", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"cases", "[", 
          RowBox[{"1", ",", "i"}], "]"}], "=", 
         RowBox[{"initialList", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "initialList", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tcourse", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ls", "=!=", "None"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"if", " ", "lockdownStrategy", " ", "provided"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
             "EndCondition", ",", "Nothing", ",", "\[IndentingNewLine]", 
              RowBox[{"tmp", "=", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
                  "UpdateConditions", ",", "Identity"}], "]"}], "@", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"cases", "[", 
                   RowBox[{"i", ",", "j"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "size"}], "}"}]}], "]"}]}]}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"val", "=", 
             RowBox[{
              RowBox[{"ls", "[", "Fun", "]"}], "[", 
              RowBox[{"tmp", ",", 
               RowBox[{"ls", "[", "history", "]"}], ",", "size"}], "]"}]}], 
            ";", 
            RowBox[{"lockActive", "=", 
             RowBox[{"val", ">", 
              RowBox[{"ls", "[", "threshold", "]"}]}]}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"ls", "[", "history", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "val", ",", "lockActive"}], "}"}]}], "]"}], 
            ";", "\[IndentingNewLine]", "tmp"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"no", " ", "lockdownStrategy"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
            "EndCondition", ",", "Nothing", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
                "UpdateConditions", ",", "Identity"}], "]"}], "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"cases", "[", 
                 RowBox[{"i", ",", "j"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "size"}], "}"}]}], "]"}]}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "tmax"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"tcourseLock", "=", 
         RowBox[{"If", "[", 
          RowBox[{"lockCond", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"inf", "===", "0"}], "&&", 
                RowBox[{"det", "===", "0"}], "&&", 
                RowBox[{"infLock", "===", "0"}], "&&", 
                RowBox[{"detLock", "===", "0"}]}], ",", "Nothing", ",", 
               RowBox[{
                RowBox[{"lockGath", "[", "i", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"normal", "=", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"UpdDet", "@", 
                    RowBox[{"UpdInf", "[", "#", "]"}]}], "&"}], ",", 
                    "Identity"}], "]"}], "@", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"cases", "[", 
                    RowBox[{"i", ",", "j", ",", "0"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "size"}], "}"}]}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
                   RowBox[{
                    RowBox[{"UpdInfLock", "@", 
                    RowBox[{"UpdDetLock", "[", "#", "]"}]}], "&"}], ",", 
                   "Identity"}], "]"}], "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"cases", "[", 
                    RowBox[{"i", ",", "j", ",", "1"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", "size"}], "}"}]}], "]"}]}]}]}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "tmax"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", "tcourse", "}"}], "//", 
         RowBox[{"Append", "[", "ls", "]"}]}], "//", 
        RowBox[{"Append", "[", "size", "]"}]}], "//", 
       RowBox[{"Append", "[", 
        RowBox[{"Length", "[", "tcourse", "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"statify", ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"#", ",", "1"}], "]"}], ",", 
      RowBox[{"Count", "[", 
       RowBox[{"#", ",", "2"}], "]"}], ",", 
      RowBox[{"Count", "[", 
       RowBox[{"#", ",", "3"}], "]"}], ",", 
      RowBox[{"Count", "[", 
       RowBox[{"#", ",", "4"}], "]"}], ",", 
      RowBox[{"Count", "[", 
       RowBox[{"#", ",", "5"}], "]"}]}], "}"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\"\<0%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "\"\<10%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.2", ",", "\"\<20%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.3", ",", "\"\<30%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "\"\<40%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "\"\<50%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.6", ",", "\"\<60%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", "\"\<70%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.8", ",", "\"\<80%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "\"\<90%\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "\"\<100%\>\""}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StatPlot", "[", 
    RowBox[{"stats_", ",", "i_", ",", "tmax_", ",", "groups_", ",", 
     RowBox[{"lds_", ":", 
      RowBox[{"{", "}"}]}], ",", "merge_", ",", "merge2_"}], "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"merge2", ",", "mergeRD", ",", "Identity"}], "]"}], "@", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"merge", ",", "mergeDI", ",", "Identity"}], "]"}], "@", 
          RowBox[{"(", 
           RowBox[{"stats", "[", 
            RowBox[{"[", 
             RowBox[{"(*", 
              RowBox[{"Sort", "@"}], "*)"}], "groups", "]"}], "]"}], 
           ")"}]}]}], ")"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"merge2", ",", "mergeRDcolor", ",", "Identity"}], "]"}], 
          "@", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"merge", ",", "mergeDIcolor", ",", "Identity"}], "]"}], 
           "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Values", "[", "colors", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"(*", 
               RowBox[{"Sort", "@"}], "*)"}], "groups", "]"}], "]"}], 
            ")"}]}]}], ")"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "tmax"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.6"}], " ", ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"previewSize", ",", 
          RowBox[{"previewSize", " ", "0.6"}]}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Prolog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"LightPink", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Rectangle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}]}], "]"}],
               "&"}], "/@", "ld"}]}], "}"}]}]}], "*)"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"(", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"merge2", ",", "mergeRD", ",", "Identity"}], "]"}], "@", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"merge", ",", "mergeDI", ",", "Identity"}], "]"}], "@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"lds", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "groups", "]"}], "]"}], ")"}]}]}], ",", 
            RowBox[{"DataRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"lds", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"lds", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", 
                RowBox[{"Length", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lds", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], 
              "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Dotted", ",", "Dashed", ",", "DotDashed"}], 
                    "}"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"k", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], 
                  ",", 
                  RowBox[{"Nest", "[", 
                   RowBox[{"Lighter", ",", "#", ",", "k"}], "]"}]}], "]"}], 
                "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"merge2", ",", "mergeRDcolor", ",", "Identity"}], 
                  "]"}], "@", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"merge", ",", "mergeDIcolor", ",", "Identity"}], 
                   "]"}], "@", 
                  RowBox[{
                   RowBox[{"Values", "[", "colors", "]"}], "[", 
                   RowBox[{"[", "groups", "]"}], "]"}]}]}], ")"}]}], ")"}]}], 
            ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"lds", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Left", ",", "Right"}], "}"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"Mod", "[", 
                    RowBox[{"k", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], 
                 ",", "Top"}], "}"}]}], "]"}]}]}], "]"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "@", "lds"}]}], "}"}]}], "]"}], ")"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mergeDI", "[", 
    RowBox[{"{", 
     RowBox[{"inf_", ",", "det_", ",", "rest___"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inf", "+", "det"}], ",", "rest"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mergeDIcolor", "[", 
    RowBox[{"{", 
     RowBox[{"inf_", ",", "det_", ",", "rest___"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{"{", 
       RowBox[{"inf", ",", "det"}], "}"}], "]"}], ",", "rest"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mergeDItext", "[", 
    RowBox[{"{", 
     RowBox[{"inf_", ",", "det_", ",", "rest___"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inf", "<>", "\"\<+\>\"", "<>", "det"}], ",", "rest"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mergeRD", "[", 
    RowBox[{"{", 
     RowBox[{"rest___", ",", "rec_", ",", "dead_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"rest", ",", 
     RowBox[{"rec", "+", "dead"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mergeRDcolor", "[", 
    RowBox[{"{", 
     RowBox[{"rest___", ",", "rec_", ",", "dead_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"rest", ",", 
     RowBox[{"Blend", "[", 
      RowBox[{"{", 
       RowBox[{"rec", ",", "dead"}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mergeRDtext", "[", 
    RowBox[{"{", 
     RowBox[{"rest___", ",", "rec_", ",", "dead_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"rest", ",", 
     RowBox[{"rec", "<>", "\"\<+\>\"", "<>", "dead"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PadStats", "[", 
    RowBox[{"list_", ",", "len_"}], "]"}], ":=", 
   RowBox[{"PadRight", "[", 
    RowBox[{"list", ",", "len", ",", 
     RowBox[{"list", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[30]:=",
 CellID->564788437,ExpressionUUID->"3a2ee651-5a95-4dfa-a8ec-5b3129f6e439"],

Cell[BoxData[""], "Input",
 CellLabel->"In[41]:=",
 CellID->1708012250,ExpressionUUID->"0a17a83c-08cc-41e1-b641-0fb46fff1bfb"]
}, Closed]],

Cell[CellGroupData[{

Cell["interactive demonstration", "Subsection",
 CellID->594140271,ExpressionUUID->"83c1ac63-4e3b-4094-b2f6-584bc335eea6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "esential", " ", "parameters", " ", "for", " ", "limiting", "  ", "slow", 
    " ", "performance"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Sync", "=", "False"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "whether", " ", "to", " ", "use", " ", "sync", " ", "or", " ", "async", 
      " ", "for", " ", "dynamic", " ", "elements"}], ",", " ", 
     RowBox[{
     "currently", " ", "only", " ", "graph", " ", "displpay", " ", "uses", 
      " ", "this", " ", "flag"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxn", "=", 
     SuperscriptBox["30", "2"]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"maximal", " ", "population", " ", "to", " ", "choose"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allowed", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["i", "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4", ",", 
         SqrtBox["maxn"]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"previewSize", "=", "500"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"size", " ", "of", " ", "the", " ", "plots"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hardtmax", "=", "100"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"maximal", " ", "time", " ", "of", " ", "simulation"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"saveDefs", "=", "True"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"save", " ", "definitions", " ", "in", " ", "notebook"}], ",", 
     " ", 
     RowBox[{"will", " ", "become", " ", "useful", " ", "for", " ", "CDF"}]}],
     "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"$FrontEndSession", ",", 
      RowBox[{"DynamicEvaluationTimeout", "\[Rule]", "30"}]}], "]"}], ";"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{
    "increased", " ", "time", " ", "for", " ", "dynamic", " ", "updates"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"framerate", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "how", " ", "many", " ", "frames", " ", "per", " ", "second", " ", "to", 
     " ", "display", " ", "in", " ", "the", " ", "video"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ensembleSize", "=", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "how", " ", "many", " ", "runs", " ", "to", " ", "perform", " ", "when", 
     " ", "doing", " ", "statistics"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "looks", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"groupAssoc", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"1", "->", "\"\<inf\>\""}], ",", 
       RowBox[{"2", "->", "\"\<det\>\""}], ",", 
       RowBox[{"3", "->", "\"\<sus\>\""}], ",", 
       RowBox[{"4", "->", " ", "\"\<rec\>\""}], ",", 
       RowBox[{"5", "->", "\"\<dead\>\""}]}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colors", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "Red"}], ",", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"Lighter", "[", "Orange", "]"}]}], ",", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"Lighter", "[", "Gray", "]"}]}], ",", 
       RowBox[{"4", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.54", ",", "1.", ",", "0.94"}], "]"}]}], ",", 
       RowBox[{"5", "\[Rule]", "Black"}]}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"regularParams", "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
       RowBox[{"ContinuousAction", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sliderParams", "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"Appearance", "\[Rule]", "\"\<DownArrow\>\""}], ",", 
       "regularParams"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"animParams", "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{
       RowBox[{"AppearanceElements", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<ProgressSlider\>\"", ",", "\"\<PlayPauseButton\>\"", ",", 
          "\"\<ResetButton\>\"", ",", "\"\<StepLeftButton\>\"", ",", 
          "\"\<StepRightButton\>\"", ",", "\"\<FasterSlowerButtons\>\""}], 
         "}"}]}], ",", 
       RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
       RowBox[{"AnimationRepetitions", "\[Rule]", "1"}], ",", 
       RowBox[{"DisplayAllSteps", "\[Rule]", "True"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ImageMargins", "\[Rule]", "0"}], ","}], "*)"}], 
       RowBox[{"ImageSize", "\[Rule]", "850"}], ",", 
       RowBox[{"DisplayAllSteps", "\[Rule]", "True"}], ",", " ", 
       RowBox[{"Appearance", "\[Rule]", 
        RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"definitions", " ", "of", " ", "sliders"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"cost", "[", 
      RowBox[{"val_", ",", 
       RowBox[{"{", 
        RowBox[{"min_", ",", "max_", ",", "step_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"val", ",", "step"}], "]"}], ",", "min"}], "]"}], ",", 
        "max"}], "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"sl", ",", "HoldRest"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sl", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ss_", ",", "min_", ",", "max_", ",", 
         RowBox[{"step_", ":", "0.001"}], ",", 
         RowBox[{"enabled_", ":", "True"}]}], "}"}], ",", 
       RowBox[{"post_", ":", "Identity"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Slider", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"ss", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ss", "=", "#"}], 
                RowBox[{"(*", 
                 RowBox[{"cost", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                 "*)"}], ")"}], "&"}], ",", 
              RowBox[{
               RowBox[{"(", " ", "post", ")"}], "&"}]}], "}"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"min", ",", "max", ",", "step"}], "}"}], ",", 
          RowBox[{"Enabled", "\[Rule]", "enabled"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\"\<       \>\"", ",", "\[IndentingNewLine]", 
        
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"IntegerQ", "[", "step", "]"}], ",", 
              RowBox[{"IntegerPart", "[", "ss", "]"}], ",", " ", 
              RowBox[{"SetAccuracy", "[", 
               RowBox[{"ss", ",", "4"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ss", "=", "#"}], 
                RowBox[{"(*", 
                 RowBox[{"cost", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                 "*)"}], ")"}], "&"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ss", "=", "#"}], 
                 RowBox[{"(*", 
                  RowBox[{"cost", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                  "*)"}], ";", "  ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"NumericQ", "[", "ss", "]"}], ",", "post"}], 
                  "]"}]}], ")"}], "&"}]}], "}"}]}], "]"}], ",", "Number", ",", 
          RowBox[{"FieldSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"4", ",", "1"}], "}"}]}], ",", 
          RowBox[{"Enabled", "\[Rule]", "enabled"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"slN", ",", "HoldRest"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"slN", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ss_", ",", 
         RowBox[{"enabled_", ":", "True"}], ",", "allowed_"}], "}"}], ",", 
       RowBox[{"post_", ":", "Identity"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Slider", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"ss", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ss", "=", "#"}], 
                RowBox[{"(*", 
                 RowBox[{"cost", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                 "*)"}], ")"}], "&"}], ",", 
              RowBox[{
               RowBox[{"(", " ", "post", ")"}], "&"}]}], "}"}]}], "]"}], ",", 
          
          RowBox[{"{", "allowed", "}"}], ",", 
          RowBox[{"Enabled", "\[Rule]", "enabled"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\"\<       \>\"", ",", "\[IndentingNewLine]", 
        
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{
            RowBox[{"IntegerPart", "[", "ss", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", "#", "]"}], ";"}], "*)"}], 
                RowBox[{"ss", "=", "#"}], 
                RowBox[{"(*", 
                 RowBox[{"cost", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                 "*)"}], ")"}], "&"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{"allowed", ",", "#"}], "]"}]}], "]"}], ";"}], 
                 "*)"}], 
                RowBox[{
                 RowBox[{"ss", "=", 
                  RowBox[{"First", "@", 
                   RowBox[{"Nearest", "[", 
                    RowBox[{"allowed", ",", "#"}], "]"}]}]}], ";", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"NumericQ", "[", "ss", "]"}], ",", "post"}], "]"}],
                  ";"}], ")"}], "&"}]}], "}"}]}], "]"}], ",", "Number", ",", 
          RowBox[{"FieldSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"4", ",", "1"}], "}"}]}], ",", 
          RowBox[{"Enabled", "\[Rule]", "enabled"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"hg", ",", "HoldRest"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hg", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ss_", ",", "col_Integer", ",", 
         RowBox[{"min_", ":", "0.001"}], ",", 
         RowBox[{"max_", ":", "0.3"}], ",", 
         RowBox[{"step_", ":", "0.001"}]}], "}"}], ",", "post_"}], "]"}], ":=", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HorizontalGauge", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", 
           RowBox[{"ss", ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<Dur \>\"", ",", "#", ",", "\"\< \>\"", ",", "#2"}], 
                   "]"}], ";"}], "*)"}], 
                RowBox[{"ss", "=", "#"}], 
                RowBox[{"(*", 
                 RowBox[{"cost", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                 "*)"}], ")"}], "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<Post \>\"", ",", "#"}], "]"}], ";"}], "*)"}], 
                
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"ss", "=", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"max", "-", "min"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "[", "#", "]"}], "-", " ", 
                    RowBox[{"Last", "[", "#", "]"}]}], ")"}]}]}], ";"}], 
                 "*)"}], 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"cost", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                  ";"}], "*)"}], " ", "post", ")"}], "&"}]}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"min", ",", "max"}], "}"}], ",", 
          RowBox[{"GaugeStyle", "\[Rule]", 
           RowBox[{"colors", "[", "col", "]"}]}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
          RowBox[{"ScaleDivisions", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"10", ",", "10"}], "}"}]}], ",", 
          RowBox[{"GaugeLabels", "\[Rule]", "None"}], ",", 
          RowBox[{"ScalePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0"}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"230", ",", "32"}], "}"}]}], ",", 
          RowBox[{"ScaleOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"GaugeFrameSize", "\[Rule]", "None"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"InputField", " ", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", " ", 
           RowBox[{
            RowBox[{"SetAccuracy", "[", 
             RowBox[{"ss", ",", "4"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ss", "=", "#"}], 
                RowBox[{"(*", 
                 RowBox[{"cost", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], "]"}], 
                 "*)"}], ")"}], "&"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ss", "=", 
                  RowBox[{"cost", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"min", ",", "max", ",", "step"}], "}"}]}], 
                   "]"}]}], ";", "  ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"NumericQ", "[", "ss", "]"}], ",", "post"}], 
                  "]"}]}], ")"}], "&"}]}], "}"}]}], "]"}], ",", "Number", ",", 
          RowBox[{"FieldSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"4", ",", "1"}], "}"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "README", "\[IndentingNewLine]", "Evaluation", " ", "is", " ", "now", 
      " ", "done", " ", "through", " ", "functions", " ", 
      RowBox[{"c", "[", "\"\<doSomething\>\"", "]"}]}], ",", " ", 
     RowBox[{
     "while", " ", "UI", " ", "updates", " ", "are", " ", "governed", " ", 
      "by", " ", "Dynamic", " ", "or", " ", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"Refresh", "[", 
        RowBox[{"...", ",", 
         RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
          RowBox[{"{", "symbolsToTrack", "}"}]}]}], "]"}], "]"}], 
      "\[IndentingNewLine]", "Sometimes", " ", "there", " ", "are", " ", 
      "benefits", " ", "to", " ", "explicitly", " ", "stating", " ", "the", 
      " ", 
      RowBox[{"TrackedSymbols", ".", " ", "Moreover"}], " ", "in", " ", "the",
       " ", "case", " ", "of", " ", "graph", " ", "updating", " ", 
      "SynchronousUpdating", " ", "is", " ", "set", " ", "to", " ", "false", 
      "\[IndentingNewLine]", "which", " ", "on", " ", 
      RowBox[{"(", 
       RowBox[{"at", " ", "least", " ", "my", " ", "system"}], ")"}], " ", 
      "makes", " ", "the", " ", "time", " ", "slider", " ", "updates", " ", 
      RowBox[{"smoother", ".", " ", "In"}], " ", "case", " ", "of", " ", 
      "problems", " ", "enable", " ", 
      RowBox[{"SynchronousUpdating", ".", "\[IndentingNewLine]", "An"}], " ", 
      "important", " ", 
      RowBox[{"note", ":", " ", 
       RowBox[{
       "If", " ", "you", " ", "need", " ", "to", " ", "initiate", " ", 
        "dynamic", " ", "variables", " ", "that", " ", "go", " ", "to", " ", 
        "sliders", " ", "do", " ", "that", " ", "in", " ", "Initialization", 
        " ", "on", " ", "the", " ", 
        RowBox[{"bottom", "."}]}]}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Rho]", ",", "k", ",", "network", ",", "graph", ",", 
       "\[IndentingNewLine]", "initialList", ",", "p", ",", "t", ",", 
       "\[IndentingNewLine]", "\[Lambda]", ",", "o", ",", "d", ",", "g", ",", 
       "\[IndentingNewLine]", "detCanInfect", ",", "\[IndentingNewLine]", 
       "courseOfEpidemics", ",", "\[IndentingNewLine]", "size", ",", "tmax", 
       ",", "ls", ",", "stats", ",", "statsLock", ",", "groups", ",", "c", 
       ",", "status", ",", 
       RowBox[{"locks", "=", 
        RowBox[{"{", "}"}]}], ",", "locksTmp", ",", "merge", ",", "merge2", 
       ",", "gColors", ",", "CommunityQ", ",", "coeTMP", ",", "lsTMP", ",", 
       "sizeTMP", ",", "tmaxTMP", ",", "ii"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"c", "[", "\"\<on\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{"status", "=", "True"}], ")"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"c", "[", "\"\<off\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{"status", "=", "False"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"controller", " ", "functions"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<graph\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{"graph", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{
           RowBox[{"GraphPostprocess", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"graphs", "[", "network", "]"}], "[", 
              RowBox[{"n", ",", "\[Rho]", ",", "k"}], "]"}], ")"}]}], ",", 
           RowBox[{"BaseStyle", "\[Rule]", 
            RowBox[{"EdgeForm", "[", "]"}]}], ",", 
           RowBox[{"VertexSize", "\[Rule]", ".6"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", " ", 
             RowBox[{"previewSize", ",", "previewSize"}], "}"}]}], ",", 
           RowBox[{"VertexStyle", "\[Rule]", 
            RowBox[{"colors", "[", "3", "]"}]}], ",", 
           RowBox[{"EdgeStyle", "\[Rule]", 
            RowBox[{"Lighter", "[", 
             RowBox[{"colors", "[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<initial\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"initialList", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"3", ",", 
            RowBox[{"VertexCount", "[", "graph", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"initialList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"RandomChoice", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"VertexCount", "[", "graph", "]"}], "]"}], ",", 
               RowBox[{"Ceiling", "[", "p", "]"}]}], "]"}]}], "}"}]}], 
          "]"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<simulation\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", "[", "\"\<on\>\"", "]"}], ";", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "courseOfEpidemics", ",", "ls", ",", "size", ",", "tmax"}], 
             "}"}], "=", 
            RowBox[{"(", 
             RowBox[{"simulation", "[", 
              RowBox[{
              "graph", ",", "initialList", ",", "\[Lambda]", ",", "g", ",", 
               "d", ",", "o", ",", "detCanInfect", ",", "None", ",", 
               "hardtmax"}], "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"stats", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"statify", "[", "#", "]"}], "/", "size"}], "&"}], "/@",
                "courseOfEpidemics"}], ")"}], "\[Transpose]"}]}], ";"}], 
          ")"}], ";", 
         RowBox[{"c", "[", "\"\<off\>\"", "]"}], ";"}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "auto", " ", "definition", " ", "of", " ", "lockdown", " ", 
        "buttons"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"name", "=", 
              RowBox[{
               RowBox[{"Keys", "[", "lsStrategies", "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"strat", "=", 
              RowBox[{
               RowBox[{"Values", "[", "lsStrategies", "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"c", "[", "\"\<addLS\>\"", "]"}], "[", "name", "]"}], ":=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"locks", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"name", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"simulation", "[", 
                    RowBox[{"graph", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], 
                    RowBox[{"(*", "initialList", "*)"}], ",", "\[Lambda]", 
                    ",", "g", ",", "d", ",", "o", ",", "detCanInfect", ",", 
                    "strat", ",", "hardtmax"}], "]"}]}], "}"}], "&"}], "@", 
                 RowBox[{"FirstLockdownStep", "[", 
                  RowBox[{"strat", ",", "courseOfEpidemics", ",", "size"}], 
                  "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"locks", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Callout", "[", 
                    RowBox[{"#", ",", "name", ",", "Bottom"}], "]"}], "&"}], 
                  "/@"}], "*)"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"statify", "[", "#", "]"}], "/", "size"}], "&"}], 
                   "/@", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"locks", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
                 "\[Transpose]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                 RowBox[{"locks", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], ";"}], "*)"}], 
             "\[IndentingNewLine]", ")"}]}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", 
           RowBox[{"Keys", "[", "lsStrategies", "]"}]}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"to", " ", 
        RowBox[{"shuffle", "/", "recalc"}], " ", "lockdowns"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<locksRedo\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "locks", "]"}], ">", "0"}], ",", " ", 
           RowBox[{
            RowBox[{"locksTmp", "=", 
             RowBox[{"locks", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"locks", "=", 
             RowBox[{"{", "}"}]}], ";", 
            RowBox[{"locks", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"c", "[", "\"\<addLS\>\"", "]"}], "[", "#", "]"}], 
                ";"}], ")"}], "&"}], "/@", "locksTmp"}]}]}], "]"}], ";"}], 
        ")"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<all\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", "[", "\"\<graph\>\"", "]"}], ";", 
         RowBox[{"c", "[", "\"\<initial\>\"", "]"}], ";", 
         RowBox[{"c", "[", "\"\<simulation\>\"", "]"}], ";", 
         RowBox[{"c", "[", "\"\<locksRedo\>\"", "]"}], ";"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<pop\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", "[", "\"\<initial\>\"", "]"}], ";", 
         RowBox[{"c", "[", "\"\<simulation\>\"", "]"}], ";", 
         RowBox[{"c", "[", "\"\<locksRedo\>\"", "]"}], ";"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<evo\>\"", "]"}], ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", "[", "\"\<simulation\>\"", "]"}], ";", 
         RowBox[{"c", "[", "\"\<locksRedo\>\"", "]"}], ";"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<refreshColors\>\"", "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gColors", "=", "colors"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"merge", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"gColors", "[", "1", "]"}], "=", 
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"colors", "[", "1", "]"}], ",", 
                RowBox[{"colors", "[", "2", "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"gColors", "[", "2", "]"}], "=", 
             RowBox[{"gColors", "[", "1", "]"}]}], ";"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"merge2", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"gColors", "[", "4", "]"}], "=", 
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"colors", "[", "4", "]"}], ",", 
                RowBox[{"colors", "[", "5", "]"}]}], "}"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"gColors", "[", "5", "]"}], "=", 
             RowBox[{"gColors", "[", "4", "]"}]}], ";"}]}], "]"}], ";"}], 
        ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<saveVideo\>\"", "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{
       "VideoGenerator", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Rasterize", "[", 
           RowBox[{
            RowBox[{"Column", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Legended", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Graph", "[", 
                  RowBox[{"graph", ",", 
                   RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "3"}], ",", "Nothing", ",", 
                    RowBox[{
                    RowBox[{"First", "@", "#2"}], "\[Rule]", 
                    RowBox[{"gColors", "[", "#1", "]"}]}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"courseOfEpidemics", "[", 
                    RowBox[{"[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"framerate", "#"}], "+", "1"}], "]"}], "]"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Placed", "[", 
                  RowBox[{
                   RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge2", ",", "mergeRDcolor", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge", ",", "mergeDIcolor", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{"Values", "[", "colors", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge2", ",", "mergeRDtext", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge", ",", "mergeDItext", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{"Values", "[", "groupAssoc", "]"}]}]}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}], 
                    ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "15"}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], 
                    RowBox[{"(*", 
                    RowBox[{",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"EdgeForm", "[", "]"}]}]}], "*)"}], "]"}], ",", 
                   "Bottom"}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"StatPlot", "[", 
                  RowBox[{"stats", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"framerate", "#"}], "+", "1"}], "]"}], ",", 
                   "tmax", ",", 
                   RowBox[{"Sort", "[", "groups", "]"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "locks", "]"}], ">", "0"}], ",", 
                    RowBox[{"locks", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ",", "locks"}], "]"}], ",", "merge", ",", "merge2"}], 
                  "]"}], ",", 
                 RowBox[{"{", "\"\<time\>\"", "}"}], ",", 
                 RowBox[{"{", "Bottom", "}"}], ",", 
                 RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                 RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}]}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
            RowBox[{"ImageResolution", "\[Rule]", "72"}]}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "courseOfEpidemics", "]"}], "/", 
          "framerate"}], ",", 
         RowBox[{"FrameRate", "\[Rule]", "framerate"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<saveStats\>\"", "]"}], ":=", 
       RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Legended", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Labeled", "[", 
            RowBox[{
             RowBox[{"StatPlot", "[", 
              RowBox[{"stats", ",", "0", ",", "tmax", ",", 
               RowBox[{"Sort", "[", "groups", "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "locks", "]"}], ">", "0"}], ",", 
                 RowBox[{"locks", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                 ",", "locks"}], "]"}], ",", "merge", ",", "merge2"}], "]"}], 
             ",", 
             RowBox[{"{", "\"\<time\>\"", "}"}], ",", 
             RowBox[{"{", "Bottom", "}"}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
                RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}]}], "]"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"SwatchLegend", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"merge2", ",", "mergeRDcolor", ",", "Identity"}], 
                 "]"}], "@", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"merge", ",", "mergeDIcolor", ",", "Identity"}], 
                  "]"}], "@", 
                 RowBox[{"Values", "[", "colors", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"merge2", ",", "mergeRDtext", ",", "Identity"}], 
                 "]"}], "@", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"merge", ",", "mergeDItext", ",", "Identity"}], 
                  "]"}], "@", 
                 RowBox[{"Values", "[", "groupAssoc", "]"}]}]}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "15"}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], 
              RowBox[{"(*", 
               RowBox[{",", 
                RowBox[{"BaseStyle", "\[Rule]", 
                 RowBox[{"EdgeForm", "[", "]"}]}]}], "*)"}], "]"}], ",", 
             "Top"}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"ImageResolution", "\[Rule]", "72"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "\"\<saveEnsembleStats\>\"", "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"Rasterize", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Legended", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Labeled", "[", 
             RowBox[{
              RowBox[{"StatPlot", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{
                    "\"\<Running simulation number: \>\"", ",", "ii", ",", 
                    "\"\</\>\"", ",", "ensembleSize"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PadStats", "[", 
                    RowBox[{"#", ",", "tmax"}], "]"}], "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"statify", "[", "#", "]"}], "/", "size"}], "&"}], 
                    "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"simulation", "[", 
                    RowBox[{
                    "graph", ",", "initialList", ",", "\[Lambda]", ",", "g", 
                    ",", "d", ",", "o", ",", "detCanInfect", ",", "None", ",",
                     "hardtmax"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ")"}]}], 
                    "\[Transpose]"}]}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "ensembleSize"}], "}"}]}], "]"}], 
                   "]"}], ")"}], "/", 
                 RowBox[{"(", "ensembleSize", ")"}]}], "\[IndentingNewLine]", 
                ",", "0", ",", "tmax", ",", 
                RowBox[{"Sort", "[", "groups", "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "locks", "]"}], ">", "0"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"(*", 
                   RowBox[{"locks", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                   "*)"}], "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"locksTmp", "=", 
                    RowBox[{"locks", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{
                    "\"\<Running \>\"", ",", "strat", ",", 
                    "\"\< simulation number: \>\"", ",", "ii", ",", 
                    "\"\</\>\"", ",", "ensembleSize"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PadStats", "[", 
                    RowBox[{"#", ",", "tmax"}], "]"}], "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"statify", "[", "#", "]"}], "/", "size"}], ")"}], 
                    "&"}], "/@", 
                    RowBox[{
                    RowBox[{"simulation", "[", 
                    RowBox[{
                    "graph", ",", "initialList", ",", "\[Lambda]", ",", "g", 
                    ",", "d", ",", "o", ",", "detCanInfect", ",", 
                    RowBox[{"lsStrategies", "[", "strat", "]"}], ",", 
                    "hardtmax"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], 
                    "\[Transpose]"}]}], ")"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "ensembleSize"}], "}"}]}], "]"}], 
                    "]"}], "/", "ensembleSize"}], ",", "strat"}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"strat", ",", "locksTmp"}], "}"}]}], "]"}]}], 
                  "\[IndentingNewLine]", ",", "locks"}], 
                 "\[IndentingNewLine]", "]"}], ",", "merge", ",", "merge2"}], 
               "]"}], ",", 
              RowBox[{"{", "\"\<time\>\"", "}"}], ",", 
              RowBox[{"{", "Bottom", "}"}], ",", 
              RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
              RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
              RowBox[{"Spacings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
                 
                 RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}]}], "]"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"SwatchLegend", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"merge2", ",", "mergeRDcolor", ",", "Identity"}], 
                  "]"}], "@", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"merge", ",", "mergeDIcolor", ",", "Identity"}], 
                   "]"}], "@", 
                  RowBox[{"Values", "[", "colors", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"merge2", ",", "mergeRDtext", ",", "Identity"}], 
                  "]"}], "@", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"merge", ",", "mergeDItext", ",", "Identity"}], 
                   "]"}], "@", 
                  RowBox[{"Values", "[", "groupAssoc", "]"}]}]}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "15"}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], 
               RowBox[{"(*", 
                RowBox[{",", 
                 RowBox[{"BaseStyle", "\[Rule]", 
                  RowBox[{"EdgeForm", "[", "]"}]}]}], "*)"}], "]"}], ",", 
              "Top"}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageResolution", "\[Rule]", "72"}]}], "]"}], ")"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Deploy", "@", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Panel", "@", 
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Network Parameters\>\"", ",", "Bold", ",", "16"}], 
                    "]"}], "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Parameters that regulate shape and size of the \
networks.\>\""}], "]"}], "&"}]}], ",", "regularParams"}], "]"}]}], "}"}], ",",
                   "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}], ",", 
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Population size: \>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Maximal number of the nodes in the network. In \
random networks, e.g. \\\"Holed Grid\\\" the number of nodes can be lower \
than this.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"slN", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"n", ",", "True", ",", "allowed"}], "}"}], ",", 
                    RowBox[{"c", "[", "\"\<all\>\"", "]"}]}], " ", "]"}]}], 
                   "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Network type: \>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{"#", ",", "\"\<Choose the type of network.\>\""}],
                     "]"}], " ", "&"}]}], ",", 
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"network", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"network", "=", "#"}], ")"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"network", "=", "#"}], ";", " ", 
                    RowBox[{"c", "[", "\"\<all\>\"", "]"}]}], ")"}], "&"}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "->", 
                    RowBox[{"Tooltip", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"graphTooltip", "[", "#", "]"}]}], "]"}]}], "&"}],
                     "/@", 
                    RowBox[{"Keys", "[", "graphs", "]"}]}], ")"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"\"\<Vertical\>\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "2"}], "}"}]}]}]}], "]"}]}], 
                   "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Show communities:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Changes layout of graph from grid embedding into \
embedding where communities are separated.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "CommunityQ", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True"}], "}"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<\[Rho]:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"Tooltip", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"\[Rho]Tooltip", "[", "network", "]"}]}], "]"}], 
                    "]"}], "&"}]}], ",", 
                    RowBox[{"sl", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\[Rho]", ",", "0.001", ",", "1", ",", "0.001", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"rhoEnabled", "[", "network", "]"}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"c", "[", "\"\<all\>\"", "]"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<k: \>\"", "//", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"Tooltip", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"kTooltip", "[", "network", "]"}]}], "]"}], "]"}],
                     "&"}]}], ",", 
                    RowBox[{"sl", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", "6", ",", "1", ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"kEnabled", "[", "network", "]"}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{"c", "[", "\"\<all\>\"", "]"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Reshuffle network\>\"", ",", 
                    RowBox[{"c", "[", "\"\<all\>\"", "]"}]}], "]"}], "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Pick new random graph with the same parameters and \
redo the simulation.\>\""}], "]"}], "&"}]}], ",", "regularParams"}], "]"}]}], 
                   "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}], ",", 
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Epidemic Parameters\>\"", ",", "Bold", ",", "16"}], 
                    "]"}], "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", "\"\<Set the parameters of the disease.\>\""}], 
                    "]"}], "&"}]}], ",", "regularParams"}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "\"\<Number of \\ninitially infected:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Set how many people are initially infected.\>\""}], 
                    "]"}], "&"}]}], ",", 
                    RowBox[{"sl", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"p", ",", "1", ",", "10", ",", "1"}], "}"}], ",", 
                    
                    RowBox[{"c", "[", "\"\<pop\>\"", "]"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Reshuffle initially infected\>\"", ",", 
                    RowBox[{"c", "[", "\"\<pop\>\"", "]"}]}], "]"}], "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Pick new set of nodes that are initially infected \
for the same graph and redo the simulation.\>\""}], "]"}], "&"}]}], ",", 
                    "regularParams"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Infection rate:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Parameter that describes how fast the infection \
spreads. The bigger, the faster it is.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"hg", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\[Lambda]", ",", "1", ",", "0.001", ",", "0.9", ",", 
                    "0.001"}], "}"}], ",", 
                    RowBox[{"c", "[", "\"\<evo\>\"", "]"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Detection rate:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Parameter that describes how fast we detect the \
infected nodes. The bigger, the faster they get detected.\>\""}], "]"}], 
                    "&"}]}], ",", 
                    RowBox[{"hg", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "o", ",", "2", ",", "0.001", ",", "0.9", ",", "0.001"}], 
                    "}"}], ",", 
                    RowBox[{"c", "[", "\"\<evo\>\"", "]"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Recovery rate:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Parameter that describes how fast the infected can \
recover. The bigger, the faster they can recover.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"hg", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "g", ",", "4", ",", "0.001", ",", "0.3", ",", "0.001"}], 
                    "}"}], ",", 
                    RowBox[{"c", "[", "\"\<evo\>\"", "]"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Death rate:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Parameter that describes how fast the infected can \
die. The bigger, the faster they can die.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"hg", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "d", ",", "5", ",", "0.001", ",", "0.3", ",", "0.001"}], 
                    "}"}], ",", 
                    RowBox[{"c", "[", "\"\<evo\>\"", "]"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Reshuffle the course of epidemic\>\"", ",", 
                    RowBox[{"c", "[", "\"\<evo\>\"", "]"}]}], "]"}], "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Pick a new course of epidemics with the same \
parameters, graph and initially infected.\>\""}], "]"}], "&"}]}], ",", 
                    "regularParams"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}], ",", 
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Display Parameters\>\"", ",", "Bold", ",", "16"}], 
                    "]"}], ",", "regularParams"}], "]"}]}], "}"}], ","}], 
                   "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Display groups:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Pick which groups should be displayed on the \
graph.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TogglerBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "groups", "]"}], ",", 
                    "groupAssoc", ",", "regularParams"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"groups", ",", "1"}], "]"}], "&&", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"groups", ",", "2"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Checkbox", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"merge", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"merge", "=", "#"}], ")"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"merge", "=", "#"}], ";", 
                    RowBox[{"c", "[", "\"\<refreshColors\>\"", "]"}], ";"}], 
                    ")"}], "&"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True"}], "}"}]}], "]"}], ",", 
                    RowBox[{"\"\<Merge inf & det\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Display Infected and Detected together.\>\""}], 
                    "]"}], "&"}]}]}], "}"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"merge", "=", "False"}], ";", "\"\<\>\""}]}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"groups", ",", "4"}], "]"}], "&&", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"groups", ",", "5"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Checkbox", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"merge2", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"merge2", "=", "#"}], ")"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"merge2", "=", "#"}], ";", 
                    RowBox[{"c", "[", "\"\<refreshColors\>\"", "]"}], ";"}], 
                    ")"}], "&"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "True"}], "}"}]}], "]"}], ",", 
                    RowBox[{"\"\<Merge rec & dead\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Display Recovered and Dead together.\>\""}], "]"}], 
                    "&"}]}]}], "}"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"merge2", "=", "False"}], ";", "\"\<\>\""}]}], 
                    "]"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}], ",", 
                    RowBox[{"Item", "[", "\"\<\>\"", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Countermeasures\>\"", ",", "Bold", ",", "16"}], 
                    "]"}], "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", "\"\<Ways to fight with the epidemics.\>\""}], 
                    "]"}], "&"}]}], ",", "regularParams"}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\"\<Quarantine for detected:\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Check how putting detected to the quarantine changes \
the course of epidemics.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"detCanInfect", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"detCanInfect", "=", "#"}], ")"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"detCanInfect", "=", "#"}], ";", 
                    RowBox[{"c", "[", "\"\<evo\>\"", "]"}]}], ")"}], "&"}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "]"}]}], "}"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{"ActionMenu", "[", 
                    RowBox[{
                    RowBox[{"\"\<Add lockdown strategy\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Check how given lockdown strategy changes the course \
of epidemics, assuming everyone is grounded.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "[", "\"\<addLS\>\"", "]"}], "[", "#", "]"}],
                     ";"}], ")"}]}], "&"}], "/@", 
                    RowBox[{"Keys", "[", "lsStrategies", "]"}]}], ")"}], ",", 
                    
                    RowBox[{"Appearance", "\[Rule]", "\"\<PopupMenu\>\""}]}], 
                    "]"}], ",", "regularParams"}], "]"}]}], "}"}], 
                  "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"Column", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"j", "=", "j"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<X\>\"", ",", 
                    RowBox[{"locks", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"locks", ",", "j"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"locks", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", 
                    RowBox[{"Length", "[", "locks", "]"}]}], "}"}]}], 
                    "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"\"\<Reshuffle lockdowns\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Recalculate the epidemics during lockdown, without \
recalculating the original course of epidemics.\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"c", "[", "\"\<locksRedo\>\"", "]"}]}], "]"}], 
                    ",", "regularParams"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Export:\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"\"\<All to video\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Exports run into .mp4 file. Path to it can be found \
by right-clicking on the output video, choosing \\\"Copy Resource Path\\\" \
and pasting it. \>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"Print", "@", 
                    RowBox[{"c", "[", "\"\<saveVideo\>\"", "]"}]}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
                    ",", "regularParams"}], "]"}], ",", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Current stats\>\"", ",", 
                    RowBox[{"Print", "@", 
                    RowBox[{"c", "[", "\"\<saveStats\>\"", "]"}]}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
                    "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Export current plot of epidemics into image file. \
Right-click on image and choose \\\"Save Image As...\\\" to save \
image.\>\""}], "]"}], "&"}]}], ",", "regularParams"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Item", "[", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"\"\<Ensemble stats\>\"", "//", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    "#", ",", 
                    "\"\<Export plot of averaged runs of epidemics into image \
file. Right-click on image and choose \\\"Save Image As...\\\" to save image.\
\>\""}], "]"}], "&"}]}], ",", 
                    RowBox[{"Print", "@", 
                    RowBox[{"c", "[", "\"\<saveEnsembleStats\>\"", "]"}]}], 
                    ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
                    ",", "regularParams"}], "]"}]}], "\[IndentingNewLine]", 
                    "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
                ",", 
                RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", " ", ".5"}], "}"}]}], ",", 
                RowBox[{"Alignment", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"Right", ",", "Left"}], "}"}], "}"}]}], ",", 
                RowBox[{"ItemSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"16", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                RowBox[{"ItemStyle", "\[Rule]", "\"\<Text\>\""}]}], 
               RowBox[{"(*", 
                RowBox[{",", 
                 RowBox[{"Dividers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "False", ",", "False", ",", "False", ",", "False", ",", 
                    "False", ",", "False", ",", "True"}], "}"}]}], "}"}]}]}], 
                "*)"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"If", "[", 
                   RowBox[{
                   "status", ",", "\"\<Simulation in progress...\>\"", ",", 
                    "\"\<done\>\""}], "]"}]}], ","}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Legended", "[", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{
                    RowBox[{"Refresh", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"CommunityQ", ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "This", " ", "is", " ", "for", " ", "proper", " ", 
                    "vertex", " ", "scaling", " ", "in", " ", "random", " ", 
                    "graphs"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"commEnabled", "[", "network", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CommunityGraphPlot", "[", 
                    RowBox[{"graph", ",", 
                    RowBox[{"VertexSize", "\[Rule]", 
                    RowBox[{".02", " ", 
                    SuperscriptBox["n", 
                    RowBox[{"4", "/", "5"}]]}]}], ",", 
                    RowBox[{"CommunityBoundaryStyle", "\[Rule]", "None"}], 
                    ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "3"}], ",", "Nothing", ",", 
                    RowBox[{
                    RowBox[{"First", "@", "#2"}], "\[Rule]", 
                    RowBox[{"gColors", "[", "#1", "]"}]}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"courseOfEpidemics", "[", 
                    RowBox[{"[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"Length", "@", "courseOfEpidemics"}]}], "]"}], 
                    "]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"CommunityGraphPlot", "[", 
                    RowBox[{"graph", ",", 
                    RowBox[{"CommunityBoundaryStyle", "\[Rule]", "None"}], 
                    ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "3"}], ",", "Nothing", ",", 
                    RowBox[{
                    RowBox[{"First", "@", "#2"}], "\[Rule]", 
                    RowBox[{"gColors", "[", "#1", "]"}]}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"courseOfEpidemics", "[", 
                    RowBox[{"[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"Length", "@", "courseOfEpidemics"}]}], "]"}], 
                    "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "3"}], ",", "Nothing", ",", 
                    RowBox[{
                    RowBox[{"First", "@", "#2"}], "\[Rule]", 
                    RowBox[{"gColors", "[", "#1", "]"}]}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"courseOfEpidemics", "[", 
                    RowBox[{"[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"Length", "@", "courseOfEpidemics"}]}], "]"}], 
                    "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"graph", ",", 
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "3"}], ",", "Nothing", ",", 
                    RowBox[{
                    RowBox[{"First", "@", "#2"}], "\[Rule]", 
                    RowBox[{"gColors", "[", "#1", "]"}]}]}], "]"}], "&"}], 
                    ",", 
                    RowBox[{"courseOfEpidemics", "[", 
                    RowBox[{"[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"Length", "@", "courseOfEpidemics"}]}], "]"}], 
                    "]"}], "]"}]}], "]"}]}]}], "]"}], "*)"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    "graph", ",", "courseOfEpidemics", ",", "t", ",", 
                    "gColors", ",", "CommunityQ"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "Sync"}]}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Placed", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge2", ",", "mergeRDcolor", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge", ",", "mergeDIcolor", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{"Values", "[", "colors", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge2", ",", "mergeRDtext", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"merge", ",", "mergeDItext", ",", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{"Values", "[", "groupAssoc", "]"}]}]}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}], 
                    ",", 
                    RowBox[{"LegendMarkerSize", "\[Rule]", "15"}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}]}], 
                    RowBox[{"(*", 
                    RowBox[{",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"EdgeForm", "[", "]"}]}]}], "*)"}], "]"}], "]"}], 
                    ",", "Bottom"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"Labeled", "[", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"Refresh", "[", 
                    RowBox[{
                    RowBox[{"StatPlot", "[", 
                    RowBox[{"stats", ",", 
                    RowBox[{"Dynamic", "@", "t"}], ",", "tmax", ",", 
                    RowBox[{"Sort", "[", "groups", "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "locks", "]"}], ">", "0"}], ",", 
                    RowBox[{"locks", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], 
                    ",", "locks"}], "]"}], ",", "merge", ",", "merge2"}], 
                    "]"}], ",", 
                    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    "stats", ",", "locks", ",", "groups", ",", "merge", ",", 
                    "merge2"}], "}"}]}]}], "]"}], 
                   RowBox[{"(*", 
                    RowBox[{",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "Sync"}]}], 
                    "*)"}], "]"}], ",", 
                  RowBox[{"{", "\"\<time\>\"", "}"}], ",", 
                  RowBox[{"{", "Bottom", "}"}], ",", 
                  RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
                  RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}]}], 
                 "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Panel", "@", 
              RowBox[{"Animator", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "t", 
                 RowBox[{"(*", 
                  RowBox[{",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"#", ",", "tmax"}], "]"}], ",", "1"}], "]"}]}], 
                    "}"}], "&"}]}], "*)"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"Dynamic", "@", "tmax"}], ",", "1"}], "}"}], ",", 
                "animParams"}], "]"}]}], ",", "SpanFromLeft"}], "}"}]}], 
          "}"}], ",", 
         RowBox[{"Editable", "\[Rule]", "False"}]}], "]"}]}]}], ",", 
     RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
       RowBox[{"SynchronousUpdating", "\[Rule]", "Sync"}], ",", 
       RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Deployed", "->", "True"}], ","}], "*)"}], 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}], 
     RowBox[{"(*", "saveDefs", "*)"}], ",", 
     RowBox[{"Initialization", "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "=", "64"}], ";", 
        RowBox[{"network", "=", "\"\<Grid\>\""}], ";", 
        RowBox[{"\[Rho]", "=", "0.2"}], ";", 
        RowBox[{"k", "=", "2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"p", "=", "3"}], ";", 
        RowBox[{"t", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Lambda]", "=", "0.2"}], ";", 
        RowBox[{"o", "=", "0.05"}], ";", 
        RowBox[{"d", "=", "0.005"}], ";", 
        RowBox[{"g", "=", "0.01"}], ";", "\[IndentingNewLine]", 
        RowBox[{"detCanInfect", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"groups", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";", 
        RowBox[{"tmax", "=", "hardtmax"}], ";", "\[IndentingNewLine]", 
        RowBox[{"merge", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"merge2", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "[", "\"\<refreshColors\>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "[", "\"\<all\>\"", "]"}]}], ")"}]}]}], 
    "]"}]}]}]], "Input",
 CellLabel->"In[42]:=",
 CellID->692615483,ExpressionUUID->"51a44a3f-ad0e-46da-a77e-94c697082644"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`n$$ = 64, $CellContext`\[Rho]$$ = 
  0.2, $CellContext`k$$ = 2, $CellContext`network$$ = 
  "Grid", $CellContext`graph$$ = 
  Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
   20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
    39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 
   57, 58, 59, 60, 61, 62, 63, 64}, {Null, 
    SparseArray[
    Automatic, {64, 64}, 0, {
     1, {{0, 2, 5, 8, 11, 14, 17, 20, 22, 25, 29, 33, 37, 41, 45, 49, 52, 55, 
       59, 63, 67, 71, 75, 79, 82, 85, 89, 93, 97, 101, 105, 109, 112, 115, 
       119, 123, 127, 131, 135, 139, 142, 145, 149, 153, 157, 161, 165, 169, 
       172, 175, 179, 183, 187, 191, 195, 199, 202, 204, 207, 210, 213, 216, 
       219, 222, 224}, {{2}, {9}, {1}, {3}, {10}, {2}, {4}, {11}, {3}, {5}, {
       12}, {4}, {6}, {13}, {5}, {7}, {14}, {6}, {8}, {15}, {7}, {16}, {1}, {
       10}, {17}, {2}, {9}, {11}, {18}, {3}, {10}, {12}, {19}, {4}, {11}, {
       13}, {20}, {5}, {12}, {14}, {21}, {6}, {13}, {15}, {22}, {7}, {14}, {
       16}, {23}, {8}, {15}, {24}, {9}, {18}, {25}, {10}, {17}, {19}, {26}, {
       11}, {18}, {20}, {27}, {12}, {19}, {21}, {28}, {13}, {20}, {22}, {
       29}, {14}, {21}, {23}, {30}, {15}, {22}, {24}, {31}, {16}, {23}, {
       32}, {17}, {26}, {33}, {18}, {25}, {27}, {34}, {19}, {26}, {28}, {
       35}, {20}, {27}, {29}, {36}, {21}, {28}, {30}, {37}, {22}, {29}, {
       31}, {38}, {23}, {30}, {32}, {39}, {24}, {31}, {40}, {25}, {34}, {
       41}, {26}, {33}, {35}, {42}, {27}, {34}, {36}, {43}, {28}, {35}, {
       37}, {44}, {29}, {36}, {38}, {45}, {30}, {37}, {39}, {46}, {31}, {
       38}, {40}, {47}, {32}, {39}, {48}, {33}, {42}, {49}, {34}, {41}, {
       43}, {50}, {35}, {42}, {44}, {51}, {36}, {43}, {45}, {52}, {37}, {
       44}, {46}, {53}, {38}, {45}, {47}, {54}, {39}, {46}, {48}, {55}, {
       40}, {47}, {56}, {41}, {50}, {57}, {42}, {49}, {51}, {58}, {43}, {
       50}, {52}, {59}, {44}, {51}, {53}, {60}, {45}, {52}, {54}, {61}, {
       46}, {53}, {55}, {62}, {47}, {54}, {56}, {63}, {48}, {55}, {64}, {
       49}, {58}, {50}, {57}, {59}, {51}, {58}, {60}, {52}, {59}, {61}, {
       53}, {60}, {62}, {54}, {61}, {63}, {55}, {62}, {64}, {56}, {63}}}, 
      Pattern}]}, {BaseStyle -> EdgeForm[], EdgeStyle -> {
      RGBColor[0.7777777777777778, 0.7777777777777778, 0.7777777777777778]}, 
    GraphLayout -> {
     "Dimension" -> 2, 
      "VertexLayout" -> {"GridEmbedding", "Dimension" -> {8, 8}}}, 
    ImageMargins -> 0, ImagePadding -> 0, ImageSize -> {500, 500}, 
    VertexSize -> {0.6}, VertexStyle -> {
      RGBColor[
      0.6666666666666666, 0.6666666666666666, 
       0.6666666666666666]}}], $CellContext`initialList$$ = {3, 3, 3, 3, 3, 1,
   3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
  3, 3, 3, 3, 1, 3, 3, 3}, $CellContext`p$$ = 3, $CellContext`t$$ = 
  1, $CellContext`\[Lambda]$$ = 0.2, $CellContext`o$$ = 
  0.05, $CellContext`d$$ = 0.005, $CellContext`g$$ = 
  0.01, $CellContext`detCanInfect$$ = 
  True, $CellContext`courseOfEpidemics$$ = CompressedData["
1:eJzt0ltyhCAQBdC5d7oXkp1kDVnCVP6z/7+oPAUUJpLRqQILEejTtpQfj5+v
B2+32/fUP6d+nxvu8dDcfDywmtfyZHEwCdL1rTxZnPFI1tP5lge48mCc1VdX
cFWP2G/Uh4rHtkfsQ1jk4YYoz339XdbP99jDtmkPkvgQYAbaSH8cJc9QBxcn
vjwuz3T7DHXPE4Vw+uY2D+cZPGcPMvJYvDrP4LHr4TyMR+w18nBeFg/nEXk+
6f2S9/bgg0fV03g6z3/y2uppPfe8eQtzr9bTe0ae53jmXsqei1fnaa4mzxM8
e3i2epa9iP3nMs+1l9QvUc96Jp5NnmXPqmeT19xLD0/redRrH0/r5cVeVOVV
nj29FL280EvdyyW9XsVr1Wt/z2v6OUqH3/Caevmz18yz4DXzuuN50Evs5ZjX
4Xt7qfppaerDv5HX070Mf9Rz+OF3vXT18oZenvY6/AW8dPW/uKBLtw==
  
  "], $CellContext`size$$ = 64, $CellContext`tmax$$ = 100, $CellContext`ls$$ =
   None, $CellContext`stats$$ = {{
    Rational[3, 64], 
    Rational[3, 32], 
    Rational[1, 8], 
    Rational[3, 16], 
    Rational[9, 32], 
    Rational[5, 16], 
    Rational[23, 64], 
    Rational[31, 64], 
    Rational[1, 2], 
    Rational[19, 32], 
    Rational[41, 64], 
    Rational[5, 8], 
    Rational[43, 64], 
    Rational[11, 16], 
    Rational[21, 32], 
    Rational[5, 8], 
    Rational[39, 64], 
    Rational[39, 64], 
    Rational[35, 64], 
    Rational[31, 64], 
    Rational[31, 64], 
    Rational[7, 16], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[3, 8], 
    Rational[23, 64], 
    Rational[21, 64], 
    Rational[19, 64], 
    Rational[17, 64], 
    Rational[15, 64], 
    Rational[13, 64], 
    Rational[13, 64], 
    Rational[11, 64], 
    Rational[11, 64], 
    Rational[5, 32], 
    Rational[5, 32], 
    Rational[9, 64], 
    Rational[9, 64], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[7, 64], 
    Rational[7, 64], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[1, 16], 
    Rational[3, 64], 
    Rational[3, 64], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 64], 
    Rational[1, 64], 
    Rational[1, 64], 
    Rational[1, 64], 
    Rational[1, 64], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0}, {0, 0, 0, 0, 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[5, 64], 
    Rational[3, 32], 
    Rational[7, 64], 
    Rational[5, 32], 
    Rational[11, 64], 
    Rational[11, 64], 
    Rational[13, 64], 
    Rational[1, 4], 
    Rational[17, 64], 
    Rational[1, 4], 
    Rational[5, 16], 
    Rational[23, 64], 
    Rational[23, 64], 
    Rational[25, 64], 
    Rational[27, 64], 
    Rational[27, 64], 
    Rational[7, 16], 
    Rational[29, 64], 
    Rational[15, 32], 
    Rational[15, 32], 
    Rational[1, 2], 
    Rational[17, 32], 
    Rational[35, 64], 
    Rational[17, 32], 
    Rational[9, 16], 
    Rational[35, 64], 
    Rational[35, 64], 
    Rational[35, 64], 
    Rational[17, 32], 
    Rational[17, 32], 
    Rational[35, 64], 
    Rational[33, 64], 
    Rational[33, 64], 
    Rational[31, 64], 
    Rational[31, 64], 
    Rational[31, 64], 
    Rational[15, 32], 
    Rational[15, 32], 
    Rational[29, 64], 
    Rational[29, 64], 
    Rational[15, 32], 
    Rational[15, 32], 
    Rational[15, 32], 
    Rational[15, 32], 
    Rational[15, 32], 
    Rational[15, 32], 
    Rational[29, 64], 
    Rational[7, 16], 
    Rational[27, 64], 
    Rational[27, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[3, 8], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[19, 64], 
    Rational[19, 64], 
    Rational[9, 32], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[1, 4], 
    Rational[1, 4]}, {
    Rational[61, 64], 
    Rational[29, 32], 
    Rational[7, 8], 
    Rational[13, 16], 
    Rational[11, 16], 
    Rational[21, 32], 
    Rational[39, 64], 
    Rational[31, 64], 
    Rational[13, 32], 
    Rational[9, 32], 
    Rational[3, 16], 
    Rational[9, 64], 
    Rational[5, 64], 
    Rational[1, 32], 
    Rational[1, 64], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
   0, 0, 0, 0, 0, 0, 0, 0, 
    Rational[1, 64], 
    Rational[1, 32], 
    Rational[3, 64], 
    Rational[3, 64], 
    Rational[3, 64], 
    Rational[1, 16], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[7, 64], 
    Rational[9, 64], 
    Rational[9, 64], 
    Rational[9, 64], 
    Rational[9, 64], 
    Rational[5, 32], 
    Rational[5, 32], 
    Rational[5, 32], 
    Rational[11, 64], 
    Rational[11, 64], 
    Rational[13, 64], 
    Rational[13, 64], 
    Rational[13, 64], 
    Rational[15, 64], 
    Rational[15, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[9, 32], 
    Rational[9, 32], 
    Rational[9, 32], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[23, 64], 
    Rational[23, 64], 
    Rational[3, 8], 
    Rational[3, 8], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[25, 64], 
    Rational[13, 32], 
    Rational[13, 32]}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    Rational[1, 64], 
    Rational[1, 32], 
    Rational[1, 32], 
    Rational[3, 64], 
    Rational[3, 64], 
    Rational[3, 64], 
    Rational[3, 64], 
    Rational[1, 16], 
    Rational[1, 16], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[5, 64], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[3, 32], 
    Rational[7, 64], 
    Rational[7, 64], 
    Rational[7, 64], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[1, 8], 
    Rational[9, 64], 
    Rational[9, 64], 
    Rational[11, 64], 
    Rational[11, 64], 
    Rational[11, 64], 
    Rational[11, 64], 
    Rational[3, 16], 
    Rational[3, 16], 
    Rational[3, 16], 
    Rational[3, 16], 
    Rational[13, 64], 
    Rational[13, 64], 
    Rational[15, 64], 
    Rational[1, 4], 
    Rational[1, 4], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[17, 64], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[5, 16], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[21, 64], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32], 
    Rational[11, 32]}}, $CellContext`statsLock$$, $CellContext`groups$$ = {1, 
  2, 3, 4, 5}, $CellContext`c$$, $CellContext`status$$ = 
  False, $CellContext`locks$$ = {}, $CellContext`locksTmp$$, \
$CellContext`merge$$ = False, $CellContext`merge2$$ = 
  False, $CellContext`gColors$$ = Association[
  1 -> RGBColor[1, 0, 0], 2 -> RGBColor[1, 0.6666666666666666, 
     Rational[1, 3]], 3 -> 
   RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 4 -> 
   RGBColor[0.54, 1., 0.94], 5 -> GrayLevel[0]], $CellContext`CommunityQ$$ = 
  False, $CellContext`coeTMP$$, $CellContext`lsTMP$$, $CellContext`sizeTMP$$, \
$CellContext`tmaxTMP$$, $CellContext`ii$$}, 
  TagBox[
   TagBox[GridBox[{
      {
       PanelBox[
        TagBox[GridBox[{
           {"\<\"\"\>", 
            ItemBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\"Network Parameters\"\>",
                StripOnInput->False,
                FontSize->16,
                FontWeight->Bold],
               "\"Parameters that regulate shape and size of the networks.\"",
               
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Parameters that regulate shape and size of the networks.", 
               "Tooltip"]& ],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {
            ItemBox["\<\"\"\>",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             StripOnInput->False]},
           {
            TagBox[
             TooltipBox["\<\"Population size: \"\>",
              
              "\"Maximal number of the nodes in the network. In random \
networks, e.g. \\\"Holed Grid\\\" the number of nodes can be lower than this.\
\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Maximal number of the nodes in the network. In random \
networks, e.g. \"Holed Grid\" the number of nodes can be lower than this.", 
              "Tooltip"]& ], 
            TemplateBox[{
              SliderBox[
               
               Dynamic[$CellContext`n$$, {($CellContext`n$$ = #)& , \
$CellContext`c$$["all"]& }], {{16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 
               196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 
               676, 729, 784, 841, 900}}, Enabled -> True], "\"       \"", 
              InputFieldBox[
               Dynamic[
                
                IntegerPart[$CellContext`n$$], {($CellContext`n$$ = #)& , \
($CellContext`n$$ = First[
                    
                    Nearest[{16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 
                    225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 
                    676, 729, 784, 841, 900}, #]]; If[
                   NumericQ[$CellContext`n$$], 
                   $CellContext`c$$["all"]]; Null)& }], Number, 
               FieldSize -> {4, 1}, Enabled -> True]},
             "RowDefault"]},
           {
            TagBox[
             TooltipBox["\<\"Network type: \"\>",
              "\"Choose the type of network.\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Choose the type of network.", "Tooltip"]& ], 
            InterpretationBox[
             StyleBox[GridBox[{
                {GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {"Grid"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"Grid\"\>",
                    
                    "\"Lattice network of edge \
\\!\\(\\*SqrtBox[\\(n\\)]\\).\\nSee GridGraph in Mathematica.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Lattice network of edge \!\(\*SqrtBox[\(n\)]\).\nSee \
GridGraph in Mathematica.", "Tooltip"]& ], "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {
                    "Holed Grid"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"Holed Grid\"\>",
                    
                    "\"Random network based on grid graph with some vertices \
removed.\\nSee holedGrid function definition.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Random network based on grid graph with some vertices \
removed.\nSee holedGrid function definition.", "Tooltip"]& ], 
                    "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}]},
                {GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {
                    "Scale-Free"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"Scale-Free\"\>",
                    
                    "\"Random network built on top of 3-vertex cycle \
graph.\\nSee BarabasiAlbertGraphDistribution in Mathematica.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Random network built on top of 3-vertex cycle graph.\n\
See BarabasiAlbertGraphDistribution in Mathematica.", "Tooltip"]& ], 
                    "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {"Random"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"Random\"\>",
                    "\"Random network.\\nSee RandomGraph in Mathematica.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Random network.\nSee RandomGraph in Mathematica.", 
                    "Tooltip"]& ], "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}]},
                {GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {
                    "Small-World (WS)"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"Small-World (WS)\"\>",
                    
                    "\"Random network based on 2k\[Dash]regular graph.\\nSee \
WattsStrogatzGraphDistribution in Mathematica.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Random network based on 2k\[Dash]regular graph.\nSee \
WattsStrogatzGraphDistribution in Mathematica.", "Tooltip"]& ], 
                    "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {"k-Grid"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"k-Grid\"\>",
                    
                    "\"Lattice network with k nearest neighbours.\\nSee \
advGrid function definition.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Lattice network with k nearest neighbours.\nSee advGrid \
function definition.", "Tooltip"]& ], "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}]},
                {GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {
                    "Small-World (KM)"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"Small-World (KM)\"\>",
                    
                    "\"Random network based on grid graph.\\nSee gridBasedSW \
function definition.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Random network based on grid graph.\nSee gridBasedSW \
function definition.", "Tooltip"]& ], "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], GridBox[{
                   {
                    
                    RadioButtonBox[
                    Dynamic[$CellContext`network$$, {($CellContext`network$$ = \
#)& , ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {
                    "2k-regular"},
                    DefaultBaseStyle->"RadioButtonBar"], 
                    StyleBox[
                    TagBox[
                    TooltipBox["\<\"2k-regular\"\>",
                    
                    "\"Circular network with k nearest neighbours.\\nSee \
CirculantGraph in Mathematica.\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Circular network with k nearest neighbours.\nSee \
CirculantGraph in Mathematica.", "Tooltip"]& ], "RadioButtonBarLabel",
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  BaselinePosition->{1, 2},
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.21]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}]}
               },
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[1.4]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}}], "Deploy"],
             RadioButtonBar[
              
              Dynamic[$CellContext`network$$, {($CellContext`network$$ = #)& \
, ($CellContext`network$$ = #; $CellContext`c$$["all"])& }], {
              "Grid" -> Tooltip[
                "Grid", 
                 "Lattice network of edge \!\(\*SqrtBox[\(n\)]\).\nSee \
GridGraph in Mathematica."], "Scale-Free" -> 
               Tooltip[
                "Scale-Free", 
                 "Random network built on top of 3-vertex cycle graph.\nSee \
BarabasiAlbertGraphDistribution in Mathematica."], "Small-World (WS)" -> 
               Tooltip[
                "Small-World (WS)", 
                 "Random network based on 2k\[Dash]regular graph.\nSee \
WattsStrogatzGraphDistribution in Mathematica."], "Small-World (KM)" -> 
               Tooltip[
                "Small-World (KM)", 
                 "Random network based on grid graph.\nSee gridBasedSW \
function definition."], "Holed Grid" -> 
               Tooltip[
                "Holed Grid", 
                 "Random network based on grid graph with some vertices \
removed.\nSee holedGrid function definition."], "Random" -> 
               Tooltip[
                "Random", "Random network.\nSee RandomGraph in Mathematica."],
                "k-Grid" -> 
               Tooltip[
                "k-Grid", 
                 "Lattice network with k nearest neighbours.\nSee advGrid \
function definition."], "2k-regular" -> 
               Tooltip[
                "2k-regular", 
                 "Circular network with k nearest neighbours.\nSee \
CirculantGraph in Mathematica."]}, 
              Appearance -> ("Vertical" -> {Automatic, 2})]]},
           {
            TagBox[
             TooltipBox["\<\"Show communities:\"\>",
              
              "\"Changes layout of graph from grid embedding into embedding \
where communities are separated.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Changes layout of graph from grid embedding into embedding \
where communities are separated.", "Tooltip"]& ], 
            CheckboxBox[Dynamic[$CellContext`CommunityQ$$], {False, True}]},
           {
            DynamicBox[ToBoxes[
              Tooltip["\[Rho]:", 
               $CellContext`\[Rho]Tooltip[$CellContext`network$$]], 
              StandardForm],
             ImageSizeCache->{12., {3., 7.}}], 
            TemplateBox[{
              SliderBox[
               
               Dynamic[$CellContext`\[Rho]$$, {($CellContext`\[Rho]$$ = #)& , \
$CellContext`c$$["all"]& }], {0.001, 1, 0.001}, Enabled -> Dynamic[
                 $CellContext`rhoEnabled[$CellContext`network$$]]], 
              "\"       \"", 
              InputFieldBox[
               Dynamic[
                If[
                 IntegerQ[0.001], 
                 IntegerPart[$CellContext`\[Rho]$$], 
                 
                 SetAccuracy[$CellContext`\[Rho]$$, 
                  4]], {($CellContext`\[Rho]$$ = #)& , ($CellContext`\[Rho]$$ = \
#; If[
                   NumericQ[$CellContext`\[Rho]$$], 
                   $CellContext`c$$["all"]])& }], Number, FieldSize -> {4, 1},
                Enabled -> Dynamic[
                 $CellContext`rhoEnabled[$CellContext`network$$]]]},
             "RowDefault"]},
           {
            DynamicBox[ToBoxes[
              Tooltip["k: ", 
               $CellContext`kTooltip[$CellContext`network$$]], StandardForm],
             ImageSizeCache->{15., {1., 11.}}], 
            TemplateBox[{
              SliderBox[
               
               Dynamic[$CellContext`k$$, {($CellContext`k$$ = #)& , \
$CellContext`c$$["all"]& }], {1, 6, 1}, Enabled -> Dynamic[
                 $CellContext`kEnabled[$CellContext`network$$]]], 
              "\"       \"", 
              InputFieldBox[
               Dynamic[
                If[
                 IntegerQ[1], 
                 IntegerPart[$CellContext`k$$], 
                 
                 SetAccuracy[$CellContext`k$$, 
                  4]], {($CellContext`k$$ = #)& , ($CellContext`k$$ = #; If[
                   NumericQ[$CellContext`k$$], 
                   $CellContext`c$$["all"]])& }], Number, FieldSize -> {4, 1},
                Enabled -> Dynamic[
                 $CellContext`kEnabled[$CellContext`network$$]]]},
             "RowDefault"]},
           {"\<\"\"\>", 
            ItemBox[
             TagBox[
              TooltipBox[
               ButtonBox["\<\"Reshuffle network\"\>",
                Appearance->Automatic,
                ButtonFunction:>$CellContext`c$$["all"],
                Evaluator->Automatic,
                Method->"Preemptive"],
               
               "\"Pick new random graph with the same parameters and redo the \
simulation.\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Pick new random graph with the same parameters and redo the \
simulation.", "Tooltip"]& ],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {
            ItemBox["\<\"\"\>",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             StripOnInput->False]},
           {"\<\"\"\>", 
            ItemBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\"Epidemic Parameters\"\>",
                StripOnInput->False,
                FontSize->16,
                FontWeight->Bold],
               "\"Set the parameters of the disease.\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Set the parameters of the disease.", 
               "Tooltip"]& ],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {
            TagBox[
             TooltipBox["\<\"Number of \\ninitially infected:\"\>",
              "\"Set how many people are initially infected.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Set how many people are initially infected.", 
              "Tooltip"]& ], 
            TemplateBox[{
              SliderBox[
               
               Dynamic[$CellContext`p$$, {($CellContext`p$$ = #)& , \
$CellContext`c$$["pop"]& }], {1, 10, 1}, Enabled -> True], "\"       \"", 
              InputFieldBox[
               Dynamic[
                If[
                 IntegerQ[1], 
                 IntegerPart[$CellContext`p$$], 
                 
                 SetAccuracy[$CellContext`p$$, 
                  4]], {($CellContext`p$$ = #)& , ($CellContext`p$$ = #; If[
                   NumericQ[$CellContext`p$$], 
                   $CellContext`c$$["pop"]])& }], Number, FieldSize -> {4, 1},
                Enabled -> True]},
             "RowDefault"]},
           {"\<\"\"\>", 
            ItemBox[
             TagBox[
              TooltipBox[
               ButtonBox["\<\"Reshuffle initially infected\"\>",
                Appearance->Automatic,
                ButtonFunction:>$CellContext`c$$["pop"],
                Evaluator->Automatic,
                Method->"Preemptive"],
               
               "\"Pick new set of nodes that are initially infected for the \
same graph and redo the simulation.\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Pick new set of nodes that are initially infected for the \
same graph and redo the simulation.", "Tooltip"]& ],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {
            TagBox[
             TooltipBox["\<\"Infection rate:\"\>",
              
              "\"Parameter that describes how fast the infection spreads. The \
bigger, the faster it is.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Parameter that describes how fast the infection spreads. The \
bigger, the faster it is.", "Tooltip"]& ], 
            TemplateBox[{
              DynamicModuleBox[{System`GaugesDump`height$$ = Dynamic[
                  
                  Charting`barValHeight[$CellContext`\[Lambda]$$, {
                   Identity, Identity}, {0.001, 0.9}, {{0, 0}, {1, 0}}, 0]], 
                System`GaugesDump`pt$$ = {0., 0.}}, 
               LocatorPaneBox[
                Dynamic[
                 
                 Charting`barValueToPoint[$CellContext`\[Lambda]$$, {
                  Identity, Identity}, {0.001, 0.9}, {{0, 0}, {1, 0}}, 0], {
                 None, (System`GaugesDump`height$$ = 
                   Charting`barPointtoValue[#, {Identity, Identity}, {0.001, 
                    0.9}, {{0, 0}, {1, 0}}, 0]; $CellContext`\[Lambda]$$ = (
                    Part[{None, ($CellContext`\[Lambda]$$ = #)& , \
$CellContext`c$$["evo"]& }, 2][
                    System`GaugesDump`height$$, #2]; \
$CellContext`\[Lambda]$$); 
                  System`GaugesDump`pt$$ = 
                   Charting`barValueToPoint[$CellContext`\[Lambda]$$, {
                    Identity, Identity}, {0.001, 0.9}, {{0, 0}, {1, 0}}, 0]; 
                  Null)& , $CellContext`c$$["evo"]& }, {}], 
                GraphicsBox[{{}, {
                   Opacity[0], 
                   PointBox[{{-0.1, 0.}, {1.1, 0.}}]}, 
                  
                  GeometricTransformationBox[{{}}, {{{1, 0}, {0, 1}}, {0, 
                    0}}], {
                   StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    
                    LineBox[{{0., 0.}, {1., 0.}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{0.11012235817575083`, 0.}, 
                    Scaled[{0., 0.06}, {0.11012235817575083`, 0.}]}, {{
                    0.22135706340378197`, 0.}, 
                    Scaled[{0., 0.06}, {0.22135706340378197`, 0.}]}, {{
                    0.3325917686318131, 0.}, 
                    Scaled[{0., 0.06}, {0.3325917686318131, 0.}]}, {{
                    0.44382647385984425`, 0.}, 
                    Scaled[{0., 0.06}, {0.44382647385984425`, 0.}]}, {{
                    0.5550611790878753, 0.}, 
                    Scaled[{0., 0.06}, {0.5550611790878753, 0.}]}, {{
                    0.6662958843159065, 0.}, 
                    Scaled[{0., 0.06}, {0.6662958843159065, 0.}]}, {{
                    0.7775305895439376, 0.}, 
                    Scaled[{0., 0.06}, {0.7775305895439376, 0.}]}, {{
                    0.8887652947719689, 0.}, 
                    Scaled[{0., 0.06}, {0.8887652947719689, 0.}]}, {{1., 0.}, 
                    
                    Scaled[{0., 0.06}, {1., 0.}]}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{0.010011123470522803`, 0.}, 
                    Scaled[{0., 0.04}, {0.010011123470522803`, 0.}]}, {{
                    0.021134593993325915`, 0.}, 
                    Scaled[{0., 0.04}, {0.021134593993325915`, 0.}]}, {{
                    0.03225806451612903, 0.}, 
                    Scaled[{0., 0.04}, {0.03225806451612903, 0.}]}, {{
                    0.04338153503893214, 0.}, 
                    Scaled[{0., 0.04}, {0.04338153503893214, 0.}]}, {{
                    0.05450500556173526, 0.}, 
                    Scaled[{0., 0.04}, {0.05450500556173526, 0.}]}, {{
                    0.06562847608453837, 0.}, 
                    Scaled[{0., 0.04}, {0.06562847608453837, 0.}]}, {{
                    0.0767519466073415, 0.}, 
                    Scaled[{0., 0.04}, {0.0767519466073415, 0.}]}, {{
                    0.0878754171301446, 0.}, 
                    Scaled[{0., 0.04}, {0.0878754171301446, 0.}]}, {{
                    0.0989988876529477, 0.}, 
                    Scaled[{0., 0.04}, {0.0989988876529477, 0.}]}, {{
                    0.12124582869855394`, 0.}, 
                    Scaled[{0., 0.04}, {0.12124582869855394`, 0.}]}, {{
                    0.13236929922135704`, 0.}, 
                    Scaled[{0., 0.04}, {0.13236929922135704`, 0.}]}, {{
                    0.14349276974416017`, 0.}, 
                    Scaled[{0., 0.04}, {0.14349276974416017`, 0.}]}, {{
                    0.1546162402669633, 0.}, 
                    Scaled[{0., 0.04}, {0.1546162402669633, 0.}]}, {{
                    0.1657397107897664, 0.}, 
                    Scaled[{0., 0.04}, {0.1657397107897664, 0.}]}, {{
                    0.1768631813125695, 0.}, 
                    Scaled[{0., 0.04}, {0.1768631813125695, 0.}]}, {{
                    0.18798665183537264`, 0.}, 
                    Scaled[{0., 0.04}, {0.18798665183537264`, 0.}]}, {{
                    0.19911012235817574`, 0.}, 
                    Scaled[{0., 0.04}, {0.19911012235817574`, 0.}]}, {{
                    0.21023359288097884`, 0.}, 
                    Scaled[{0., 0.04}, {0.21023359288097884`, 0.}]}, {{
                    0.23248053392658508`, 0.}, 
                    Scaled[{0., 0.04}, {0.23248053392658508`, 0.}]}, {{
                    0.2436040044493882, 0.}, 
                    Scaled[{0., 0.04}, {0.2436040044493882, 0.}]}, {{
                    0.25472747497219134`, 0.}, 
                    Scaled[{0., 0.04}, {0.25472747497219134`, 0.}]}, {{
                    0.2658509454949944, 0.}, 
                    Scaled[{0., 0.04}, {0.2658509454949944, 0.}]}, {{
                    0.27697441601779754`, 0.}, 
                    Scaled[{0., 0.04}, {0.27697441601779754`, 0.}]}, {{
                    0.28809788654060065`, 0.}, 
                    Scaled[{0., 0.04}, {0.28809788654060065`, 0.}]}, {{
                    0.2992213570634038, 0.}, 
                    Scaled[{0., 0.04}, {0.2992213570634038, 0.}]}, {{
                    0.3103448275862069, 0.}, 
                    Scaled[{0., 0.04}, {0.3103448275862069, 0.}]}, {{
                    0.32146829810900995`, 0.}, 
                    Scaled[{0., 0.04}, {0.32146829810900995`, 0.}]}, {{
                    0.3437152391546162, 0.}, 
                    Scaled[{0., 0.04}, {0.3437152391546162, 0.}]}, {{
                    0.3548387096774193, 0.}, 
                    Scaled[{0., 0.04}, {0.3548387096774193, 0.}]}, {{
                    0.3659621802002225, 0.}, 
                    Scaled[{0., 0.04}, {0.3659621802002225, 0.}]}, {{
                    0.3770856507230256, 0.}, 
                    Scaled[{0., 0.04}, {0.3770856507230256, 0.}]}, {{
                    0.3882091212458286, 0.}, 
                    Scaled[{0., 0.04}, {0.3882091212458286, 0.}]}, {{
                    0.3993325917686318, 0.}, 
                    Scaled[{0., 0.04}, {0.3993325917686318, 0.}]}, {{
                    0.4104560622914349, 0.}, 
                    Scaled[{0., 0.04}, {0.4104560622914349, 0.}]}, {{
                    0.42157953281423804`, 0.}, 
                    Scaled[{0., 0.04}, {0.42157953281423804`, 0.}]}, {{
                    0.43270300333704115`, 0.}, 
                    Scaled[{0., 0.04}, {0.43270300333704115`, 0.}]}, {{
                    0.45494994438264735`, 0.}, 
                    Scaled[{0., 0.04}, {0.45494994438264735`, 0.}]}, {{
                    0.46607341490545046`, 0.}, 
                    Scaled[{0., 0.04}, {0.46607341490545046`, 0.}]}, {{
                    0.47719688542825356`, 0.}, 
                    Scaled[{0., 0.04}, {0.47719688542825356`, 0.}]}, {{
                    0.4883203559510567, 0.}, 
                    Scaled[{0., 0.04}, {0.4883203559510567, 0.}]}, {{
                    0.4994438264738598, 0.}, 
                    Scaled[{0., 0.04}, {0.4994438264738598, 0.}]}, {{
                    0.5105672969966629, 0.}, 
                    Scaled[{0., 0.04}, {0.5105672969966629, 0.}]}, {{
                    0.521690767519466, 0.}, 
                    Scaled[{0., 0.04}, {0.521690767519466, 0.}]}, {{
                    0.5328142380422691, 0.}, 
                    Scaled[{0., 0.04}, {0.5328142380422691, 0.}]}, {{
                    0.5439377085650723, 0.}, 
                    Scaled[{0., 0.04}, {0.5439377085650723, 0.}]}, {{
                    0.5661846496106785, 0.}, 
                    Scaled[{0., 0.04}, {0.5661846496106785, 0.}]}, {{
                    0.5773081201334817, 0.}, 
                    Scaled[{0., 0.04}, {0.5773081201334817, 0.}]}, {{
                    0.5884315906562847, 0.}, 
                    Scaled[{0., 0.04}, {0.5884315906562847, 0.}]}, {{
                    0.5995550611790879, 0.}, 
                    Scaled[{0., 0.04}, {0.5995550611790879, 0.}]}, {{
                    0.610678531701891, 0.}, 
                    Scaled[{0., 0.04}, {0.610678531701891, 0.}]}, {{
                    0.6218020022246942, 0.}, 
                    Scaled[{0., 0.04}, {0.6218020022246942, 0.}]}, {{
                    0.6329254727474971, 0.}, 
                    Scaled[{0., 0.04}, {0.6329254727474971, 0.}]}, {{
                    0.6440489432703003, 0.}, 
                    Scaled[{0., 0.04}, {0.6440489432703003, 0.}]}, {{
                    0.6551724137931034, 0.}, 
                    Scaled[{0., 0.04}, {0.6551724137931034, 0.}]}, {{
                    0.6774193548387096, 0.}, 
                    Scaled[{0., 0.04}, {0.6774193548387096, 0.}]}, {{
                    0.6885428253615128, 0.}, 
                    Scaled[{0., 0.04}, {0.6885428253615128, 0.}]}, {{
                    0.6996662958843158, 0.}, 
                    Scaled[{0., 0.04}, {0.6996662958843158, 0.}]}, {{
                    0.710789766407119, 0.}, 
                    Scaled[{0., 0.04}, {0.710789766407119, 0.}]}, {{
                    0.7219132369299222, 0.}, 
                    Scaled[{0., 0.04}, {0.7219132369299222, 0.}]}, {{
                    0.7330367074527252, 0.}, 
                    Scaled[{0., 0.04}, {0.7330367074527252, 0.}]}, {{
                    0.7441601779755284, 0.}, 
                    Scaled[{0., 0.04}, {0.7441601779755284, 0.}]}, {{
                    0.7552836484983315, 0.}, 
                    Scaled[{0., 0.04}, {0.7552836484983315, 0.}]}, {{
                    0.7664071190211345, 0.}, 
                    Scaled[{0., 0.04}, {0.7664071190211345, 0.}]}, {{
                    0.7886540600667408, 0.}, 
                    Scaled[{0., 0.04}, {0.7886540600667408, 0.}]}, {{
                    0.7997775305895438, 0.}, 
                    Scaled[{0., 0.04}, {0.7997775305895438, 0.}]}, {{
                    0.810901001112347, 0.}, 
                    Scaled[{0., 0.04}, {0.810901001112347, 0.}]}, {{
                    0.8220244716351501, 0.}, 
                    Scaled[{0., 0.04}, {0.8220244716351501, 0.}]}, {{
                    0.8331479421579532, 0.}, 
                    Scaled[{0., 0.04}, {0.8331479421579532, 0.}]}, {{
                    0.8442714126807563, 0.}, 
                    Scaled[{0., 0.04}, {0.8442714126807563, 0.}]}, {{
                    0.8553948832035595, 0.}, 
                    Scaled[{0., 0.04}, {0.8553948832035595, 0.}]}, {{
                    0.8665183537263625, 0.}, 
                    Scaled[{0., 0.04}, {0.8665183537263625, 0.}]}, {{
                    0.8776418242491657, 0.}, 
                    Scaled[{0., 0.04}, {0.8776418242491657, 0.}]}, {{
                    0.899888765294772, 0.}, 
                    Scaled[{0., 0.04}, {0.899888765294772, 0.}]}, {{
                    0.911012235817575, 0.}, 
                    Scaled[{0., 0.04}, {0.911012235817575, 0.}]}, {{
                    0.9221357063403781, 0.}, 
                    Scaled[{0., 0.04}, {0.9221357063403781, 0.}]}, {{
                    0.9332591768631813, 0.}, 
                    Scaled[{0., 0.04}, {0.9332591768631813, 0.}]}, {{
                    0.9443826473859843, 0.}, 
                    Scaled[{0., 0.04}, {0.9443826473859843, 0.}]}, {{
                    0.9555061179087875, 0.}, 
                    Scaled[{0., 0.04}, {0.9555061179087875, 0.}]}, {{
                    0.9666295884315906, 0.}, 
                    Scaled[{0., 0.04}, {0.9666295884315906, 0.}]}, {{
                    0.9777530589543937, 0.}, 
                    Scaled[{0., 0.04}, {0.9777530589543937, 0.}]}, {{
                    0.9888765294771968, 0.}, 
                    Scaled[{0., 0.04}, {0.9888765294771968, 0.}]}}], {{{}}, 
                    StripOnInput -> False}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    BoxData[
                    FormBox["0.1`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.11012235817575083`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.2`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.22135706340378197`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.3`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.3325917686318131, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.4`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.44382647385984425`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.5`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.5550611790878753, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.6`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.6662958843159065, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.7`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.7775305895439376, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.8`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.8887652947719689, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.9`", TraditionalForm]], 
                    Offset[{0., -3.}, {1., 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 
                    0}]}, {{{}, {{}, {}}}, StripOnInput -> False}, 
                    StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{{}, {{}, {}}}, 
                    StripOnInput -> False}, StripOnInput -> 
                    False]}, {}}, {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{
                    GrayLevel[0.25], FontSize -> 10, FontFamily -> 
                    "Helvetica"}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{{
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]], 
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.5]]}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{
                    Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]]}, StripOnInput -> False}, StripOnInput -> 
                    False], {}}, {}, {
                   Directive[
                    RGBColor[1, 0, 0]], 
                   GeometricTransformationBox[{{}, 
                    Directive[
                    RGBColor[1, 0, 0]], {}, "MarkerRotation" -> 0, 
                    TagBox[
                    TooltipBox[
                    PolygonBox[{{0.5, 0.5}, {-0.5, 0.5}, {0., -0.5}}], 
                    DynamicBox[
                    ToBoxes[$CellContext`\[Lambda]$$, StandardForm]]], 
                    Annotation[#, 
                    Dynamic[$CellContext`\[Lambda]$$], 
                    "Tooltip"]& ]}, {{{-0.075, 0.}, {0., 0.075}}, {
                    1.1123470522803114` (-0.001 + 1. If[
                    Dynamic[
                    MatchQ[$CellContext`\[Lambda]$$, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                    Dynamic[
                    Clip[$CellContext`\[Lambda]$$, 
                    Sort[
                    N[{0.001, 0.9}], Less]]], 0.001]), 0.0375}}]}, {}, 
                  
                  GeometricTransformationBox[{}, {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, {
                 AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> 
                  False, AxesLabel -> None, AxesOrigin -> Automatic, 
                  AxesStyle -> {}, Background -> None, BaselinePosition -> 
                  Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                  ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                  Automatic, DisplayFunction -> Identity, Epilog -> {}, 
                  FormatType -> TraditionalForm, Frame -> False, FrameLabel -> 
                  None, FrameStyle -> {}, FrameTicks -> Automatic, 
                  FrameTicksStyle -> {}, GridLines -> None, 
                  GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> 
                  All, ImageSize -> {230, 32}, ImageSizeRaw -> Automatic, 
                  LabelStyle -> {}, 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotLabel -> None, 
                  PlotRange -> All, PlotRangeClipping -> False, 
                  PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                  PreserveImageOptions -> Automatic, Prolog -> {}, 
                  RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, 
                  Axes -> False, Method -> Automatic}], Appearance -> None, 
                Enabled -> Automatic], DynamicModuleValues :> {}], 
              InputFieldBox[
               Dynamic[
                
                SetAccuracy[$CellContext`\[Lambda]$$, 
                 4], {($CellContext`\[Lambda]$$ = #)& , ($CellContext`\
\[Lambda]$$ = $CellContext`cost[#, {0.001, 0.9, 0.001}]; If[
                   NumericQ[$CellContext`\[Lambda]$$], 
                   $CellContext`c$$["evo"]])& }], Number, 
               FieldSize -> {4, 1}]},
             "RowDefault"]},
           {
            TagBox[
             TooltipBox["\<\"Detection rate:\"\>",
              
              "\"Parameter that describes how fast we detect the infected \
nodes. The bigger, the faster they get detected.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Parameter that describes how fast we detect the infected \
nodes. The bigger, the faster they get detected.", "Tooltip"]& ], 
            TemplateBox[{
              DynamicModuleBox[{System`GaugesDump`height$$ = Dynamic[
                  
                  Charting`barValHeight[$CellContext`o$$, {
                   Identity, Identity}, {0.001, 0.9}, {{0, 0}, {1, 0}}, 0]], 
                System`GaugesDump`pt$$ = {0., 0.}}, 
               LocatorPaneBox[
                Dynamic[
                 
                 Charting`barValueToPoint[$CellContext`o$$, {
                  Identity, Identity}, {0.001, 0.9}, {{0, 0}, {1, 0}}, 0], {
                 None, (System`GaugesDump`height$$ = 
                   Charting`barPointtoValue[#, {Identity, Identity}, {0.001, 
                    0.9}, {{0, 0}, {1, 0}}, 0]; $CellContext`o$$ = (
                    Part[{None, ($CellContext`o$$ = #)& , $CellContext`c$$[
                    "evo"]& }, 2][
                    System`GaugesDump`height$$, #2]; $CellContext`o$$); 
                  System`GaugesDump`pt$$ = 
                   Charting`barValueToPoint[$CellContext`o$$, {
                    Identity, Identity}, {0.001, 0.9}, {{0, 0}, {1, 0}}, 0]; 
                  Null)& , $CellContext`c$$["evo"]& }, {}], 
                GraphicsBox[{{}, {
                   Opacity[0], 
                   PointBox[{{-0.1, 0.}, {1.1, 0.}}]}, 
                  
                  GeometricTransformationBox[{{}}, {{{1, 0}, {0, 1}}, {0, 
                    0}}], {
                   StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    
                    LineBox[{{0., 0.}, {1., 0.}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{0.11012235817575083`, 0.}, 
                    Scaled[{0., 0.06}, {0.11012235817575083`, 0.}]}, {{
                    0.22135706340378197`, 0.}, 
                    Scaled[{0., 0.06}, {0.22135706340378197`, 0.}]}, {{
                    0.3325917686318131, 0.}, 
                    Scaled[{0., 0.06}, {0.3325917686318131, 0.}]}, {{
                    0.44382647385984425`, 0.}, 
                    Scaled[{0., 0.06}, {0.44382647385984425`, 0.}]}, {{
                    0.5550611790878753, 0.}, 
                    Scaled[{0., 0.06}, {0.5550611790878753, 0.}]}, {{
                    0.6662958843159065, 0.}, 
                    Scaled[{0., 0.06}, {0.6662958843159065, 0.}]}, {{
                    0.7775305895439376, 0.}, 
                    Scaled[{0., 0.06}, {0.7775305895439376, 0.}]}, {{
                    0.8887652947719689, 0.}, 
                    Scaled[{0., 0.06}, {0.8887652947719689, 0.}]}, {{1., 0.}, 
                    
                    Scaled[{0., 0.06}, {1., 0.}]}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{0.010011123470522803`, 0.}, 
                    Scaled[{0., 0.04}, {0.010011123470522803`, 0.}]}, {{
                    0.021134593993325915`, 0.}, 
                    Scaled[{0., 0.04}, {0.021134593993325915`, 0.}]}, {{
                    0.03225806451612903, 0.}, 
                    Scaled[{0., 0.04}, {0.03225806451612903, 0.}]}, {{
                    0.04338153503893214, 0.}, 
                    Scaled[{0., 0.04}, {0.04338153503893214, 0.}]}, {{
                    0.05450500556173526, 0.}, 
                    Scaled[{0., 0.04}, {0.05450500556173526, 0.}]}, {{
                    0.06562847608453837, 0.}, 
                    Scaled[{0., 0.04}, {0.06562847608453837, 0.}]}, {{
                    0.0767519466073415, 0.}, 
                    Scaled[{0., 0.04}, {0.0767519466073415, 0.}]}, {{
                    0.0878754171301446, 0.}, 
                    Scaled[{0., 0.04}, {0.0878754171301446, 0.}]}, {{
                    0.0989988876529477, 0.}, 
                    Scaled[{0., 0.04}, {0.0989988876529477, 0.}]}, {{
                    0.12124582869855394`, 0.}, 
                    Scaled[{0., 0.04}, {0.12124582869855394`, 0.}]}, {{
                    0.13236929922135704`, 0.}, 
                    Scaled[{0., 0.04}, {0.13236929922135704`, 0.}]}, {{
                    0.14349276974416017`, 0.}, 
                    Scaled[{0., 0.04}, {0.14349276974416017`, 0.}]}, {{
                    0.1546162402669633, 0.}, 
                    Scaled[{0., 0.04}, {0.1546162402669633, 0.}]}, {{
                    0.1657397107897664, 0.}, 
                    Scaled[{0., 0.04}, {0.1657397107897664, 0.}]}, {{
                    0.1768631813125695, 0.}, 
                    Scaled[{0., 0.04}, {0.1768631813125695, 0.}]}, {{
                    0.18798665183537264`, 0.}, 
                    Scaled[{0., 0.04}, {0.18798665183537264`, 0.}]}, {{
                    0.19911012235817574`, 0.}, 
                    Scaled[{0., 0.04}, {0.19911012235817574`, 0.}]}, {{
                    0.21023359288097884`, 0.}, 
                    Scaled[{0., 0.04}, {0.21023359288097884`, 0.}]}, {{
                    0.23248053392658508`, 0.}, 
                    Scaled[{0., 0.04}, {0.23248053392658508`, 0.}]}, {{
                    0.2436040044493882, 0.}, 
                    Scaled[{0., 0.04}, {0.2436040044493882, 0.}]}, {{
                    0.25472747497219134`, 0.}, 
                    Scaled[{0., 0.04}, {0.25472747497219134`, 0.}]}, {{
                    0.2658509454949944, 0.}, 
                    Scaled[{0., 0.04}, {0.2658509454949944, 0.}]}, {{
                    0.27697441601779754`, 0.}, 
                    Scaled[{0., 0.04}, {0.27697441601779754`, 0.}]}, {{
                    0.28809788654060065`, 0.}, 
                    Scaled[{0., 0.04}, {0.28809788654060065`, 0.}]}, {{
                    0.2992213570634038, 0.}, 
                    Scaled[{0., 0.04}, {0.2992213570634038, 0.}]}, {{
                    0.3103448275862069, 0.}, 
                    Scaled[{0., 0.04}, {0.3103448275862069, 0.}]}, {{
                    0.32146829810900995`, 0.}, 
                    Scaled[{0., 0.04}, {0.32146829810900995`, 0.}]}, {{
                    0.3437152391546162, 0.}, 
                    Scaled[{0., 0.04}, {0.3437152391546162, 0.}]}, {{
                    0.3548387096774193, 0.}, 
                    Scaled[{0., 0.04}, {0.3548387096774193, 0.}]}, {{
                    0.3659621802002225, 0.}, 
                    Scaled[{0., 0.04}, {0.3659621802002225, 0.}]}, {{
                    0.3770856507230256, 0.}, 
                    Scaled[{0., 0.04}, {0.3770856507230256, 0.}]}, {{
                    0.3882091212458286, 0.}, 
                    Scaled[{0., 0.04}, {0.3882091212458286, 0.}]}, {{
                    0.3993325917686318, 0.}, 
                    Scaled[{0., 0.04}, {0.3993325917686318, 0.}]}, {{
                    0.4104560622914349, 0.}, 
                    Scaled[{0., 0.04}, {0.4104560622914349, 0.}]}, {{
                    0.42157953281423804`, 0.}, 
                    Scaled[{0., 0.04}, {0.42157953281423804`, 0.}]}, {{
                    0.43270300333704115`, 0.}, 
                    Scaled[{0., 0.04}, {0.43270300333704115`, 0.}]}, {{
                    0.45494994438264735`, 0.}, 
                    Scaled[{0., 0.04}, {0.45494994438264735`, 0.}]}, {{
                    0.46607341490545046`, 0.}, 
                    Scaled[{0., 0.04}, {0.46607341490545046`, 0.}]}, {{
                    0.47719688542825356`, 0.}, 
                    Scaled[{0., 0.04}, {0.47719688542825356`, 0.}]}, {{
                    0.4883203559510567, 0.}, 
                    Scaled[{0., 0.04}, {0.4883203559510567, 0.}]}, {{
                    0.4994438264738598, 0.}, 
                    Scaled[{0., 0.04}, {0.4994438264738598, 0.}]}, {{
                    0.5105672969966629, 0.}, 
                    Scaled[{0., 0.04}, {0.5105672969966629, 0.}]}, {{
                    0.521690767519466, 0.}, 
                    Scaled[{0., 0.04}, {0.521690767519466, 0.}]}, {{
                    0.5328142380422691, 0.}, 
                    Scaled[{0., 0.04}, {0.5328142380422691, 0.}]}, {{
                    0.5439377085650723, 0.}, 
                    Scaled[{0., 0.04}, {0.5439377085650723, 0.}]}, {{
                    0.5661846496106785, 0.}, 
                    Scaled[{0., 0.04}, {0.5661846496106785, 0.}]}, {{
                    0.5773081201334817, 0.}, 
                    Scaled[{0., 0.04}, {0.5773081201334817, 0.}]}, {{
                    0.5884315906562847, 0.}, 
                    Scaled[{0., 0.04}, {0.5884315906562847, 0.}]}, {{
                    0.5995550611790879, 0.}, 
                    Scaled[{0., 0.04}, {0.5995550611790879, 0.}]}, {{
                    0.610678531701891, 0.}, 
                    Scaled[{0., 0.04}, {0.610678531701891, 0.}]}, {{
                    0.6218020022246942, 0.}, 
                    Scaled[{0., 0.04}, {0.6218020022246942, 0.}]}, {{
                    0.6329254727474971, 0.}, 
                    Scaled[{0., 0.04}, {0.6329254727474971, 0.}]}, {{
                    0.6440489432703003, 0.}, 
                    Scaled[{0., 0.04}, {0.6440489432703003, 0.}]}, {{
                    0.6551724137931034, 0.}, 
                    Scaled[{0., 0.04}, {0.6551724137931034, 0.}]}, {{
                    0.6774193548387096, 0.}, 
                    Scaled[{0., 0.04}, {0.6774193548387096, 0.}]}, {{
                    0.6885428253615128, 0.}, 
                    Scaled[{0., 0.04}, {0.6885428253615128, 0.}]}, {{
                    0.6996662958843158, 0.}, 
                    Scaled[{0., 0.04}, {0.6996662958843158, 0.}]}, {{
                    0.710789766407119, 0.}, 
                    Scaled[{0., 0.04}, {0.710789766407119, 0.}]}, {{
                    0.7219132369299222, 0.}, 
                    Scaled[{0., 0.04}, {0.7219132369299222, 0.}]}, {{
                    0.7330367074527252, 0.}, 
                    Scaled[{0., 0.04}, {0.7330367074527252, 0.}]}, {{
                    0.7441601779755284, 0.}, 
                    Scaled[{0., 0.04}, {0.7441601779755284, 0.}]}, {{
                    0.7552836484983315, 0.}, 
                    Scaled[{0., 0.04}, {0.7552836484983315, 0.}]}, {{
                    0.7664071190211345, 0.}, 
                    Scaled[{0., 0.04}, {0.7664071190211345, 0.}]}, {{
                    0.7886540600667408, 0.}, 
                    Scaled[{0., 0.04}, {0.7886540600667408, 0.}]}, {{
                    0.7997775305895438, 0.}, 
                    Scaled[{0., 0.04}, {0.7997775305895438, 0.}]}, {{
                    0.810901001112347, 0.}, 
                    Scaled[{0., 0.04}, {0.810901001112347, 0.}]}, {{
                    0.8220244716351501, 0.}, 
                    Scaled[{0., 0.04}, {0.8220244716351501, 0.}]}, {{
                    0.8331479421579532, 0.}, 
                    Scaled[{0., 0.04}, {0.8331479421579532, 0.}]}, {{
                    0.8442714126807563, 0.}, 
                    Scaled[{0., 0.04}, {0.8442714126807563, 0.}]}, {{
                    0.8553948832035595, 0.}, 
                    Scaled[{0., 0.04}, {0.8553948832035595, 0.}]}, {{
                    0.8665183537263625, 0.}, 
                    Scaled[{0., 0.04}, {0.8665183537263625, 0.}]}, {{
                    0.8776418242491657, 0.}, 
                    Scaled[{0., 0.04}, {0.8776418242491657, 0.}]}, {{
                    0.899888765294772, 0.}, 
                    Scaled[{0., 0.04}, {0.899888765294772, 0.}]}, {{
                    0.911012235817575, 0.}, 
                    Scaled[{0., 0.04}, {0.911012235817575, 0.}]}, {{
                    0.9221357063403781, 0.}, 
                    Scaled[{0., 0.04}, {0.9221357063403781, 0.}]}, {{
                    0.9332591768631813, 0.}, 
                    Scaled[{0., 0.04}, {0.9332591768631813, 0.}]}, {{
                    0.9443826473859843, 0.}, 
                    Scaled[{0., 0.04}, {0.9443826473859843, 0.}]}, {{
                    0.9555061179087875, 0.}, 
                    Scaled[{0., 0.04}, {0.9555061179087875, 0.}]}, {{
                    0.9666295884315906, 0.}, 
                    Scaled[{0., 0.04}, {0.9666295884315906, 0.}]}, {{
                    0.9777530589543937, 0.}, 
                    Scaled[{0., 0.04}, {0.9777530589543937, 0.}]}, {{
                    0.9888765294771968, 0.}, 
                    Scaled[{0., 0.04}, {0.9888765294771968, 0.}]}}], {{{}}, 
                    StripOnInput -> False}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    BoxData[
                    FormBox["0.1`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.11012235817575083`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.2`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.22135706340378197`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.3`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.3325917686318131, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.4`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.44382647385984425`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.5`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.5550611790878753, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.6`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.6662958843159065, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.7`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.7775305895439376, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.8`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.8887652947719689, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.9`", TraditionalForm]], 
                    Offset[{0., -3.}, {1., 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 
                    0}]}, {{{}, {{}, {}}}, StripOnInput -> False}, 
                    StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{{}, {{}, {}}}, 
                    StripOnInput -> False}, StripOnInput -> 
                    False]}, {}}, {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{
                    GrayLevel[0.25], FontSize -> 10, FontFamily -> 
                    "Helvetica"}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{{
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]], 
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.5]]}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{
                    Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]]}, StripOnInput -> False}, StripOnInput -> 
                    False], {}}, {}, {
                   Directive[
                    RGBColor[1, 0.6666666666666666, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], 
                   GeometricTransformationBox[{{}, 
                    Directive[
                    RGBColor[1, 0.6666666666666666, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}, 
                    "MarkerRotation" -> 0, 
                    TagBox[
                    TooltipBox[
                    PolygonBox[{{0.5, 0.5}, {-0.5, 0.5}, {0., -0.5}}], 
                    DynamicBox[
                    ToBoxes[$CellContext`o$$, StandardForm]]], Annotation[#, 
                    Dynamic[$CellContext`o$$], "Tooltip"]& ]}, {{{-0.075, 
                    0.}, {0., 0.075}}, {1.1123470522803114` (-0.001 + 1. If[
                    Dynamic[
                    MatchQ[$CellContext`o$$, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                    Dynamic[
                    Clip[$CellContext`o$$, 
                    Sort[
                    N[{0.001, 0.9}], Less]]], 0.001]), 0.0375}}]}, {}, 
                  
                  GeometricTransformationBox[{}, {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, {
                 AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> 
                  False, AxesLabel -> None, AxesOrigin -> Automatic, 
                  AxesStyle -> {}, Background -> None, BaselinePosition -> 
                  Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                  ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                  Automatic, DisplayFunction -> Identity, Epilog -> {}, 
                  FormatType -> TraditionalForm, Frame -> False, FrameLabel -> 
                  None, FrameStyle -> {}, FrameTicks -> Automatic, 
                  FrameTicksStyle -> {}, GridLines -> None, 
                  GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> 
                  All, ImageSize -> {230, 32}, ImageSizeRaw -> Automatic, 
                  LabelStyle -> {}, 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotLabel -> None, 
                  PlotRange -> All, PlotRangeClipping -> False, 
                  PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                  PreserveImageOptions -> Automatic, Prolog -> {}, 
                  RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, 
                  Axes -> False, Method -> Automatic}], Appearance -> None, 
                Enabled -> Automatic], DynamicModuleValues :> {}], 
              InputFieldBox[
               Dynamic[
                
                SetAccuracy[$CellContext`o$$, 
                 4], {($CellContext`o$$ = #)& , ($CellContext`o$$ = \
$CellContext`cost[#, {0.001, 0.9, 0.001}]; If[
                   NumericQ[$CellContext`o$$], 
                   $CellContext`c$$["evo"]])& }], Number, 
               FieldSize -> {4, 1}]},
             "RowDefault"]},
           {
            TagBox[
             TooltipBox["\<\"Recovery rate:\"\>",
              
              "\"Parameter that describes how fast the infected can recover. \
The bigger, the faster they can recover.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Parameter that describes how fast the infected can recover. \
The bigger, the faster they can recover.", "Tooltip"]& ], 
            TemplateBox[{
              DynamicModuleBox[{System`GaugesDump`height$$ = Dynamic[
                  Charting`barValHeight[$CellContext`g$$, {
                   Identity, Identity}, {0.001, 0.3}, {{0, 0}, {1, 0}}, 0]], 
                System`GaugesDump`pt$$ = {0., 0.}}, 
               LocatorPaneBox[
                Dynamic[
                 
                 Charting`barValueToPoint[$CellContext`g$$, {
                  Identity, Identity}, {0.001, 0.3}, {{0, 0}, {1, 0}}, 0], {
                 None, (System`GaugesDump`height$$ = 
                   Charting`barPointtoValue[#, {Identity, Identity}, {0.001, 
                    0.3}, {{0, 0}, {1, 0}}, 0]; $CellContext`g$$ = (
                    Part[{None, ($CellContext`g$$ = #)& , $CellContext`c$$[
                    "evo"]& }, 2][
                    System`GaugesDump`height$$, #2]; $CellContext`g$$); 
                  System`GaugesDump`pt$$ = 
                   Charting`barValueToPoint[$CellContext`g$$, {
                    Identity, Identity}, {0.001, 0.3}, {{0, 0}, {1, 0}}, 0]; 
                  Null)& , $CellContext`c$$["evo"]& }, {}], 
                GraphicsBox[{{}, {
                   Opacity[0], 
                   PointBox[{{-0.1, 0.}, {1.1, 0.}}]}, 
                  
                  GeometricTransformationBox[{{}}, {{{1, 0}, {0, 1}}, {0, 
                    0}}], {
                   StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    
                    LineBox[{{0., 0.}, {1., 0.}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{0.16387959866220736`, 0.}, 
                    Scaled[{0., 0.06}, {0.16387959866220736`, 0.}]}, {{
                    0.3311036789297659, 0.}, 
                    Scaled[{0., 0.06}, {0.3311036789297659, 0.}]}, {{
                    0.4983277591973244, 0.}, 
                    Scaled[{0., 0.06}, {0.4983277591973244, 0.}]}, {{
                    0.6655518394648829, 0.}, 
                    Scaled[{0., 0.06}, {0.6655518394648829, 0.}]}, {{
                    0.8327759197324415, 0.}, 
                    Scaled[{0., 0.06}, {0.8327759197324415, 0.}]}, {{1., 0.}, 
                    
                    Scaled[{0., 0.06}, {1., 0.}]}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{0.013377926421404682`, 0.}, 
                    Scaled[{0., 0.04}, {0.013377926421404682`, 0.}]}, {{
                    0.03010033444816054, 0.}, 
                    Scaled[{0., 0.04}, {0.03010033444816054, 0.}]}, {{
                    0.046822742474916385`, 0.}, 
                    Scaled[{0., 0.04}, {0.046822742474916385`, 0.}]}, {{
                    0.06354515050167224, 0.}, 
                    Scaled[{0., 0.04}, {0.06354515050167224, 0.}]}, {{
                    0.0802675585284281, 0.}, 
                    Scaled[{0., 0.04}, {0.0802675585284281, 0.}]}, {{
                    0.09698996655518394, 0.}, 
                    Scaled[{0., 0.04}, {0.09698996655518394, 0.}]}, {{
                    0.1137123745819398, 0.}, 
                    Scaled[{0., 0.04}, {0.1137123745819398, 0.}]}, {{
                    0.13043478260869565`, 0.}, 
                    Scaled[{0., 0.04}, {0.13043478260869565`, 0.}]}, {{
                    0.1471571906354515, 0.}, 
                    Scaled[{0., 0.04}, {0.1471571906354515, 0.}]}, {{
                    0.1806020066889632, 0.}, 
                    Scaled[{0., 0.04}, {0.1806020066889632, 0.}]}, {{
                    0.19732441471571904`, 0.}, 
                    Scaled[{0., 0.04}, {0.19732441471571904`, 0.}]}, {{
                    0.2140468227424749, 0.}, 
                    Scaled[{0., 0.04}, {0.2140468227424749, 0.}]}, {{
                    0.23076923076923078`, 0.}, 
                    Scaled[{0., 0.04}, {0.23076923076923078`, 0.}]}, {{
                    0.2474916387959866, 0.}, 
                    Scaled[{0., 0.04}, {0.2474916387959866, 0.}]}, {{
                    0.26421404682274247`, 0.}, 
                    Scaled[{0., 0.04}, {0.26421404682274247`, 0.}]}, {{
                    0.28093645484949836`, 0.}, 
                    Scaled[{0., 0.04}, {0.28093645484949836`, 0.}]}, {{
                    0.29765886287625415`, 0.}, 
                    Scaled[{0., 0.04}, {0.29765886287625415`, 0.}]}, {{
                    0.31438127090301005`, 0.}, 
                    Scaled[{0., 0.04}, {0.31438127090301005`, 0.}]}, {{
                    0.34782608695652173`, 0.}, 
                    Scaled[{0., 0.04}, {0.34782608695652173`, 0.}]}, {{
                    0.36454849498327757`, 0.}, 
                    Scaled[{0., 0.04}, {0.36454849498327757`, 0.}]}, {{
                    0.38127090301003347`, 0.}, 
                    Scaled[{0., 0.04}, {0.38127090301003347`, 0.}]}, {{
                    0.39799331103678925`, 0.}, 
                    Scaled[{0., 0.04}, {0.39799331103678925`, 0.}]}, {{
                    0.41471571906354515`, 0.}, 
                    Scaled[{0., 0.04}, {0.41471571906354515`, 0.}]}, {{
                    0.431438127090301, 0.}, 
                    Scaled[{0., 0.04}, {0.431438127090301, 0.}]}, {{
                    0.4481605351170569, 0.}, 
                    Scaled[{0., 0.04}, {0.4481605351170569, 0.}]}, {{
                    0.46488294314381273`, 0.}, 
                    Scaled[{0., 0.04}, {0.46488294314381273`, 0.}]}, {{
                    0.4816053511705685, 0.}, 
                    Scaled[{0., 0.04}, {0.4816053511705685, 0.}]}, {{
                    0.5150501672240803, 0.}, 
                    Scaled[{0., 0.04}, {0.5150501672240803, 0.}]}, {{
                    0.5317725752508361, 0.}, 
                    Scaled[{0., 0.04}, {0.5317725752508361, 0.}]}, {{
                    0.5484949832775919, 0.}, 
                    Scaled[{0., 0.04}, {0.5484949832775919, 0.}]}, {{
                    0.5652173913043479, 0.}, 
                    Scaled[{0., 0.04}, {0.5652173913043479, 0.}]}, {{
                    0.5819397993311036, 0.}, 
                    Scaled[{0., 0.04}, {0.5819397993311036, 0.}]}, {{
                    0.5986622073578595, 0.}, 
                    Scaled[{0., 0.04}, {0.5986622073578595, 0.}]}, {{
                    0.6153846153846154, 0.}, 
                    Scaled[{0., 0.04}, {0.6153846153846154, 0.}]}, {{
                    0.6321070234113713, 0.}, 
                    Scaled[{0., 0.04}, {0.6321070234113713, 0.}]}, {{
                    0.6488294314381271, 0.}, 
                    Scaled[{0., 0.04}, {0.6488294314381271, 0.}]}, {{
                    0.6822742474916388, 0.}, 
                    Scaled[{0., 0.04}, {0.6822742474916388, 0.}]}, {{
                    0.6989966555183946, 0.}, 
                    Scaled[{0., 0.04}, {0.6989966555183946, 0.}]}, {{
                    0.7157190635451505, 0.}, 
                    Scaled[{0., 0.04}, {0.7157190635451505, 0.}]}, {{
                    0.7324414715719063, 0.}, 
                    Scaled[{0., 0.04}, {0.7324414715719063, 0.}]}, {{
                    0.7491638795986623, 0.}, 
                    Scaled[{0., 0.04}, {0.7491638795986623, 0.}]}, {{
                    0.7658862876254181, 0.}, 
                    Scaled[{0., 0.04}, {0.7658862876254181, 0.}]}, {{
                    0.7826086956521738, 0.}, 
                    Scaled[{0., 0.04}, {0.7826086956521738, 0.}]}, {{
                    0.7993311036789297, 0.}, 
                    Scaled[{0., 0.04}, {0.7993311036789297, 0.}]}, {{
                    0.8160535117056856, 0.}, 
                    Scaled[{0., 0.04}, {0.8160535117056856, 0.}]}, {{
                    0.8494983277591973, 0.}, 
                    Scaled[{0., 0.04}, {0.8494983277591973, 0.}]}, {{
                    0.8662207357859532, 0.}, 
                    Scaled[{0., 0.04}, {0.8662207357859532, 0.}]}, {{
                    0.8829431438127091, 0.}, 
                    Scaled[{0., 0.04}, {0.8829431438127091, 0.}]}, {{
                    0.899665551839465, 0.}, 
                    Scaled[{0., 0.04}, {0.899665551839465, 0.}]}, {{
                    0.9163879598662208, 0.}, 
                    Scaled[{0., 0.04}, {0.9163879598662208, 0.}]}, {{
                    0.9331103678929766, 0.}, 
                    Scaled[{0., 0.04}, {0.9331103678929766, 0.}]}, {{
                    0.9498327759197324, 0.}, 
                    Scaled[{0., 0.04}, {0.9498327759197324, 0.}]}, {{
                    0.9665551839464882, 0.}, 
                    Scaled[{0., 0.04}, {0.9665551839464882, 0.}]}, {{
                    0.983277591973244, 0.}, 
                    Scaled[{0., 0.04}, {0.983277591973244, 0.}]}}], {{{}}, 
                    StripOnInput -> False}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    BoxData[
                    FormBox["0.05`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.16387959866220736`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.1`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.3311036789297659, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.15`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.4983277591973244, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.2`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.6655518394648829, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.25`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.8327759197324415, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.3`", TraditionalForm]], 
                    Offset[{0., -3.}, {1., 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 
                    0}]}, {{{}, {{}, {}}}, StripOnInput -> False}, 
                    StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{{}, {{}, {}}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {}}, {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{
                    GrayLevel[0.25], FontSize -> 10, FontFamily -> 
                    "Helvetica"}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{{
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]], 
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.5]]}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{
                    Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]]}, StripOnInput -> False}, StripOnInput -> 
                    False], {}}, {}, {
                   Directive[
                    RGBColor[0.54, 1., 0.94]], 
                   GeometricTransformationBox[{{}, 
                    Directive[
                    RGBColor[0.54, 1., 0.94]], {}, "MarkerRotation" -> 0, 
                    TagBox[
                    TooltipBox[
                    PolygonBox[{{0.5, 0.5}, {-0.5, 0.5}, {0., -0.5}}], 
                    DynamicBox[
                    ToBoxes[$CellContext`g$$, StandardForm]]], Annotation[#, 
                    Dynamic[$CellContext`g$$], "Tooltip"]& ]}, {{{-0.075, 
                    0.}, {0., 0.075}}, {3.3444816053511706` (-0.001 + 1. If[
                    Dynamic[
                    MatchQ[$CellContext`g$$, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                    Dynamic[
                    Clip[$CellContext`g$$, 
                    Sort[
                    N[{0.001, 0.3}], Less]]], 0.001]), 0.0375}}]}, {}, 
                  
                  GeometricTransformationBox[{}, {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, {
                 AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> 
                  False, AxesLabel -> None, AxesOrigin -> Automatic, 
                  AxesStyle -> {}, Background -> None, BaselinePosition -> 
                  Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                  ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                  Automatic, DisplayFunction -> Identity, Epilog -> {}, 
                  FormatType -> TraditionalForm, Frame -> False, FrameLabel -> 
                  None, FrameStyle -> {}, FrameTicks -> Automatic, 
                  FrameTicksStyle -> {}, GridLines -> None, 
                  GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> 
                  All, ImageSize -> {230, 32}, ImageSizeRaw -> Automatic, 
                  LabelStyle -> {}, 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotLabel -> None, 
                  PlotRange -> All, PlotRangeClipping -> False, 
                  PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                  PreserveImageOptions -> Automatic, Prolog -> {}, 
                  RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, 
                  Axes -> False, Method -> Automatic}], Appearance -> None, 
                Enabled -> Automatic], DynamicModuleValues :> {}], 
              InputFieldBox[
               Dynamic[
                
                SetAccuracy[$CellContext`g$$, 
                 4], {($CellContext`g$$ = #)& , ($CellContext`g$$ = \
$CellContext`cost[#, {0.001, 0.3, 0.001}]; If[
                   NumericQ[$CellContext`g$$], 
                   $CellContext`c$$["evo"]])& }], Number, 
               FieldSize -> {4, 1}]},
             "RowDefault"]},
           {
            TagBox[
             TooltipBox["\<\"Death rate:\"\>",
              
              "\"Parameter that describes how fast the infected can die. The \
bigger, the faster they can die.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Parameter that describes how fast the infected can die. The \
bigger, the faster they can die.", "Tooltip"]& ], 
            TemplateBox[{
              DynamicModuleBox[{System`GaugesDump`height$$ = Dynamic[
                  
                  Charting`barValHeight[$CellContext`d$$, {
                   Identity, Identity}, {0.001, 0.3}, {{0, 0}, {1, 0}}, 0]], 
                System`GaugesDump`pt$$ = {0., 0.}}, 
               LocatorPaneBox[
                Dynamic[
                 
                 Charting`barValueToPoint[$CellContext`d$$, {
                  Identity, Identity}, {0.001, 0.3}, {{0, 0}, {1, 0}}, 0], {
                 None, (System`GaugesDump`height$$ = 
                   Charting`barPointtoValue[#, {Identity, Identity}, {0.001, 
                    0.3}, {{0, 0}, {1, 0}}, 0]; $CellContext`d$$ = (
                    Part[{None, ($CellContext`d$$ = #)& , $CellContext`c$$[
                    "evo"]& }, 2][
                    System`GaugesDump`height$$, #2]; $CellContext`d$$); 
                  System`GaugesDump`pt$$ = 
                   Charting`barValueToPoint[$CellContext`d$$, {
                    Identity, Identity}, {0.001, 0.3}, {{0, 0}, {1, 0}}, 0]; 
                  Null)& , $CellContext`c$$["evo"]& }, {}], 
                GraphicsBox[{{}, {
                   Opacity[0], 
                   PointBox[{{-0.1, 0.}, {1.1, 0.}}]}, 
                  
                  GeometricTransformationBox[{{}}, {{{1, 0}, {0, 1}}, {0, 
                    0}}], {
                   StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    
                    LineBox[{{0., 0.}, {1., 0.}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{0.16387959866220736`, 0.}, 
                    Scaled[{0., 0.06}, {0.16387959866220736`, 0.}]}, {{
                    0.3311036789297659, 0.}, 
                    Scaled[{0., 0.06}, {0.3311036789297659, 0.}]}, {{
                    0.4983277591973244, 0.}, 
                    Scaled[{0., 0.06}, {0.4983277591973244, 0.}]}, {{
                    0.6655518394648829, 0.}, 
                    Scaled[{0., 0.06}, {0.6655518394648829, 0.}]}, {{
                    0.8327759197324415, 0.}, 
                    Scaled[{0., 0.06}, {0.8327759197324415, 0.}]}, {{1., 0.}, 
                    
                    Scaled[{0., 0.06}, {1., 0.}]}}], {{{}}, StripOnInput -> 
                    False}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{0.013377926421404682`, 0.}, 
                    Scaled[{0., 0.04}, {0.013377926421404682`, 0.}]}, {{
                    0.03010033444816054, 0.}, 
                    Scaled[{0., 0.04}, {0.03010033444816054, 0.}]}, {{
                    0.046822742474916385`, 0.}, 
                    Scaled[{0., 0.04}, {0.046822742474916385`, 0.}]}, {{
                    0.06354515050167224, 0.}, 
                    Scaled[{0., 0.04}, {0.06354515050167224, 0.}]}, {{
                    0.0802675585284281, 0.}, 
                    Scaled[{0., 0.04}, {0.0802675585284281, 0.}]}, {{
                    0.09698996655518394, 0.}, 
                    Scaled[{0., 0.04}, {0.09698996655518394, 0.}]}, {{
                    0.1137123745819398, 0.}, 
                    Scaled[{0., 0.04}, {0.1137123745819398, 0.}]}, {{
                    0.13043478260869565`, 0.}, 
                    Scaled[{0., 0.04}, {0.13043478260869565`, 0.}]}, {{
                    0.1471571906354515, 0.}, 
                    Scaled[{0., 0.04}, {0.1471571906354515, 0.}]}, {{
                    0.1806020066889632, 0.}, 
                    Scaled[{0., 0.04}, {0.1806020066889632, 0.}]}, {{
                    0.19732441471571904`, 0.}, 
                    Scaled[{0., 0.04}, {0.19732441471571904`, 0.}]}, {{
                    0.2140468227424749, 0.}, 
                    Scaled[{0., 0.04}, {0.2140468227424749, 0.}]}, {{
                    0.23076923076923078`, 0.}, 
                    Scaled[{0., 0.04}, {0.23076923076923078`, 0.}]}, {{
                    0.2474916387959866, 0.}, 
                    Scaled[{0., 0.04}, {0.2474916387959866, 0.}]}, {{
                    0.26421404682274247`, 0.}, 
                    Scaled[{0., 0.04}, {0.26421404682274247`, 0.}]}, {{
                    0.28093645484949836`, 0.}, 
                    Scaled[{0., 0.04}, {0.28093645484949836`, 0.}]}, {{
                    0.29765886287625415`, 0.}, 
                    Scaled[{0., 0.04}, {0.29765886287625415`, 0.}]}, {{
                    0.31438127090301005`, 0.}, 
                    Scaled[{0., 0.04}, {0.31438127090301005`, 0.}]}, {{
                    0.34782608695652173`, 0.}, 
                    Scaled[{0., 0.04}, {0.34782608695652173`, 0.}]}, {{
                    0.36454849498327757`, 0.}, 
                    Scaled[{0., 0.04}, {0.36454849498327757`, 0.}]}, {{
                    0.38127090301003347`, 0.}, 
                    Scaled[{0., 0.04}, {0.38127090301003347`, 0.}]}, {{
                    0.39799331103678925`, 0.}, 
                    Scaled[{0., 0.04}, {0.39799331103678925`, 0.}]}, {{
                    0.41471571906354515`, 0.}, 
                    Scaled[{0., 0.04}, {0.41471571906354515`, 0.}]}, {{
                    0.431438127090301, 0.}, 
                    Scaled[{0., 0.04}, {0.431438127090301, 0.}]}, {{
                    0.4481605351170569, 0.}, 
                    Scaled[{0., 0.04}, {0.4481605351170569, 0.}]}, {{
                    0.46488294314381273`, 0.}, 
                    Scaled[{0., 0.04}, {0.46488294314381273`, 0.}]}, {{
                    0.4816053511705685, 0.}, 
                    Scaled[{0., 0.04}, {0.4816053511705685, 0.}]}, {{
                    0.5150501672240803, 0.}, 
                    Scaled[{0., 0.04}, {0.5150501672240803, 0.}]}, {{
                    0.5317725752508361, 0.}, 
                    Scaled[{0., 0.04}, {0.5317725752508361, 0.}]}, {{
                    0.5484949832775919, 0.}, 
                    Scaled[{0., 0.04}, {0.5484949832775919, 0.}]}, {{
                    0.5652173913043479, 0.}, 
                    Scaled[{0., 0.04}, {0.5652173913043479, 0.}]}, {{
                    0.5819397993311036, 0.}, 
                    Scaled[{0., 0.04}, {0.5819397993311036, 0.}]}, {{
                    0.5986622073578595, 0.}, 
                    Scaled[{0., 0.04}, {0.5986622073578595, 0.}]}, {{
                    0.6153846153846154, 0.}, 
                    Scaled[{0., 0.04}, {0.6153846153846154, 0.}]}, {{
                    0.6321070234113713, 0.}, 
                    Scaled[{0., 0.04}, {0.6321070234113713, 0.}]}, {{
                    0.6488294314381271, 0.}, 
                    Scaled[{0., 0.04}, {0.6488294314381271, 0.}]}, {{
                    0.6822742474916388, 0.}, 
                    Scaled[{0., 0.04}, {0.6822742474916388, 0.}]}, {{
                    0.6989966555183946, 0.}, 
                    Scaled[{0., 0.04}, {0.6989966555183946, 0.}]}, {{
                    0.7157190635451505, 0.}, 
                    Scaled[{0., 0.04}, {0.7157190635451505, 0.}]}, {{
                    0.7324414715719063, 0.}, 
                    Scaled[{0., 0.04}, {0.7324414715719063, 0.}]}, {{
                    0.7491638795986623, 0.}, 
                    Scaled[{0., 0.04}, {0.7491638795986623, 0.}]}, {{
                    0.7658862876254181, 0.}, 
                    Scaled[{0., 0.04}, {0.7658862876254181, 0.}]}, {{
                    0.7826086956521738, 0.}, 
                    Scaled[{0., 0.04}, {0.7826086956521738, 0.}]}, {{
                    0.7993311036789297, 0.}, 
                    Scaled[{0., 0.04}, {0.7993311036789297, 0.}]}, {{
                    0.8160535117056856, 0.}, 
                    Scaled[{0., 0.04}, {0.8160535117056856, 0.}]}, {{
                    0.8494983277591973, 0.}, 
                    Scaled[{0., 0.04}, {0.8494983277591973, 0.}]}, {{
                    0.8662207357859532, 0.}, 
                    Scaled[{0., 0.04}, {0.8662207357859532, 0.}]}, {{
                    0.8829431438127091, 0.}, 
                    Scaled[{0., 0.04}, {0.8829431438127091, 0.}]}, {{
                    0.899665551839465, 0.}, 
                    Scaled[{0., 0.04}, {0.899665551839465, 0.}]}, {{
                    0.9163879598662208, 0.}, 
                    Scaled[{0., 0.04}, {0.9163879598662208, 0.}]}, {{
                    0.9331103678929766, 0.}, 
                    Scaled[{0., 0.04}, {0.9331103678929766, 0.}]}, {{
                    0.9498327759197324, 0.}, 
                    Scaled[{0., 0.04}, {0.9498327759197324, 0.}]}, {{
                    0.9665551839464882, 0.}, 
                    Scaled[{0., 0.04}, {0.9665551839464882, 0.}]}, {{
                    0.983277591973244, 0.}, 
                    Scaled[{0., 0.04}, {0.983277591973244, 0.}]}}], {{{}}, 
                    StripOnInput -> False}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    BoxData[
                    FormBox["0.05`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.16387959866220736`, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.1`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.3311036789297659, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.15`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.4983277591973244, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.2`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.6655518394648829, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.25`", TraditionalForm]], 
                    Offset[{0., -3.}, {0.8327759197324415, 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 0}], 
                    InsetBox[
                    BoxData[
                    FormBox["0.3`", TraditionalForm]], 
                    Offset[{0., -3.}, {1., 0.}], 
                    ImageScaled[{0.5, 1.}], Automatic, {1, 
                    0}]}, {{{}, {{}, {}}}, StripOnInput -> False}, 
                    StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{{}, {{}, {}}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {}}, {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{
                    GrayLevel[0.25], FontSize -> 10, FontFamily -> 
                    "Helvetica"}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{{
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]], 
                    Directive[
                    CapForm["Butt"], 
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.5]]}}, StripOnInput -> False}, StripOnInput -> 
                    False], {{{}}, StripOnInput -> False}, StripOnInput -> 
                    False]}, {{
                    Directive[
                    AbsoluteThickness[1], 
                    GrayLevel[0.5]]}, StripOnInput -> False}, StripOnInput -> 
                    False], {}}, {}, {
                   Directive[
                    GrayLevel[0]], 
                   GeometricTransformationBox[{{}, 
                    Directive[
                    GrayLevel[0]], {}, "MarkerRotation" -> 0, 
                    TagBox[
                    TooltipBox[
                    PolygonBox[{{0.5, 0.5}, {-0.5, 0.5}, {0., -0.5}}], 
                    DynamicBox[
                    ToBoxes[$CellContext`d$$, StandardForm]]], Annotation[#, 
                    Dynamic[$CellContext`d$$], "Tooltip"]& ]}, {{{-0.075, 
                    0.}, {0., 0.075}}, {3.3444816053511706` (-0.001 + 1. If[
                    Dynamic[
                    MatchQ[$CellContext`d$$, 
                    PatternTest[
                    Blank[], Charting`realNumericQ]]], 
                    Dynamic[
                    Clip[$CellContext`d$$, 
                    Sort[
                    N[{0.001, 0.3}], Less]]], 0.001]), 0.0375}}]}, {}, 
                  
                  GeometricTransformationBox[{}, {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, {
                 AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> 
                  False, AxesLabel -> None, AxesOrigin -> Automatic, 
                  AxesStyle -> {}, Background -> None, BaselinePosition -> 
                  Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                  ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                  Automatic, DisplayFunction -> Identity, Epilog -> {}, 
                  FormatType -> TraditionalForm, Frame -> False, FrameLabel -> 
                  None, FrameStyle -> {}, FrameTicks -> Automatic, 
                  FrameTicksStyle -> {}, GridLines -> None, 
                  GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> 
                  All, ImageSize -> {230, 32}, ImageSizeRaw -> Automatic, 
                  LabelStyle -> {}, 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotLabel -> None, 
                  PlotRange -> All, PlotRangeClipping -> False, 
                  PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                  PreserveImageOptions -> Automatic, Prolog -> {}, 
                  RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, 
                  Axes -> False, Method -> Automatic}], Appearance -> None, 
                Enabled -> Automatic], DynamicModuleValues :> {}], 
              InputFieldBox[
               Dynamic[
                
                SetAccuracy[$CellContext`d$$, 
                 4], {($CellContext`d$$ = #)& , ($CellContext`d$$ = \
$CellContext`cost[#, {0.001, 0.3, 0.001}]; If[
                   NumericQ[$CellContext`d$$], 
                   $CellContext`c$$["evo"]])& }], Number, 
               FieldSize -> {4, 1}]},
             "RowDefault"]},
           {"\<\"\"\>", 
            ItemBox[
             TagBox[
              TooltipBox[
               ButtonBox["\<\"Reshuffle the course of epidemic\"\>",
                Appearance->Automatic,
                ButtonFunction:>$CellContext`c$$["evo"],
                Evaluator->Automatic,
                Method->"Preemptive"],
               
               "\"Pick a new course of epidemics with the same parameters, \
graph and initially infected.\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Pick a new course of epidemics with the same parameters, \
graph and initially infected.", "Tooltip"]& ],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {
            ItemBox["\<\"\"\>",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             StripOnInput->False]},
           {
            TagBox[
             TooltipBox["\<\"Display groups:\"\>",
              "\"Pick which groups should be displayed on the graph.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Pick which groups should be displayed on the graph.", 
              "Tooltip"]& ], 
            TemplateBox[{
              InterpretationBox[
               StyleBox[
                GridBox[{{
                   SetterBox[
                    Dynamic[
                    MemberQ[$CellContext`groups$$, 1], 
                    BoxForm`TogglerBarFunction[$CellContext`groups$$, 1]& ], {
                    True}, "\"inf\"", Alignment -> Center, ContinuousAction -> 
                    True], 
                   SetterBox[
                    Dynamic[
                    MemberQ[$CellContext`groups$$, 2], 
                    BoxForm`TogglerBarFunction[$CellContext`groups$$, 2]& ], {
                    True}, "\"det\"", Alignment -> Center, ContinuousAction -> 
                    True], 
                   SetterBox[
                    Dynamic[
                    MemberQ[$CellContext`groups$$, 3], 
                    BoxForm`TogglerBarFunction[$CellContext`groups$$, 3]& ], {
                    True}, "\"sus\"", Alignment -> Center, ContinuousAction -> 
                    True], 
                   SetterBox[
                    Dynamic[
                    MemberQ[$CellContext`groups$$, 4], 
                    BoxForm`TogglerBarFunction[$CellContext`groups$$, 4]& ], {
                    True}, "\"rec\"", Alignment -> Center, ContinuousAction -> 
                    True], 
                   SetterBox[
                    Dynamic[
                    MemberQ[$CellContext`groups$$, 5], 
                    BoxForm`TogglerBarFunction[$CellContext`groups$$, 5]& ], {
                    True}, "\"dead\"", Alignment -> Center, ContinuousAction -> 
                    True]}}, ColumnSpacings -> 0, BaselinePosition -> {1, 1}],
                 Deployed -> True], 
               TogglerBar[
                Dynamic[$CellContext`groups$$], {
                1 -> "inf", 2 -> "det", 3 -> "sus", 4 -> "rec", 5 -> "dead"}, 
                Alignment -> Center, ContinuousAction -> True]], 
              TagBox[
               GridBox[{{
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    MemberQ[$CellContext`groups$$, 1], 
                    MemberQ[$CellContext`groups$$, 2]], 
                    Row[{
                    Checkbox[
                    
                    Dynamic[$CellContext`merge$$, {($CellContext`merge$$ = #)& \
, ($CellContext`merge$$ = #; $CellContext`c$$["refreshColors"]; Null)& }], {
                    False, True}], 
                    (Tooltip[#, "Display Infected and Detected together."]& )[
                    "Merge inf & det"]}], $CellContext`merge$$ = False; ""], 
                    StandardForm]]}, {
                  DynamicBox[
                   ToBoxes[
                    If[
                    And[
                    MemberQ[$CellContext`groups$$, 4], 
                    MemberQ[$CellContext`groups$$, 5]], 
                    Row[{
                    Checkbox[
                    
                    Dynamic[$CellContext`merge2$$, {($CellContext`merge2$$ = \
#)& , ($CellContext`merge2$$ = #; $CellContext`c$$["refreshColors"]; 
                    Null)& }], {False, True}], 
                    (Tooltip[#, "Display Recovered and Dead together."]& )[
                    "Merge rec & dead"]}], $CellContext`merge2$$ = False; ""],
                     StandardForm]]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]},
             "RowDefault"]},
           {
            ItemBox["\<\"\"\>",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             StripOnInput->False]},
           {"\<\"\"\>", 
            ItemBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\"Countermeasures\"\>",
                StripOnInput->False,
                FontSize->16,
                FontWeight->Bold],
               "\"Ways to fight with the epidemics.\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Ways to fight with the epidemics.", "Tooltip"]& ],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {
            TagBox[
             TooltipBox["\<\"Quarantine for detected:\"\>",
              
              "\"Check how putting detected to the quarantine changes the \
course of epidemics.\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Check how putting detected to the quarantine changes the \
course of epidemics.", "Tooltip"]& ], 
            
            CheckboxBox[
             Dynamic[$CellContext`detCanInfect$$, \
{($CellContext`detCanInfect$$ = #)& , ($CellContext`detCanInfect$$ = #; \
$CellContext`c$$["evo"])& }], {True, False}]},
           {"\<\"\"\>", 
            ItemBox[
             ActionMenuBox[
              TagBox[
               TooltipBox["\<\"Add lockdown strategy\"\>",
                
                "\"Check how given lockdown strategy changes the course of \
epidemics, assuming everyone is grounded.\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Check how given lockdown strategy changes the course of \
epidemics, assuming everyone is grounded.", 
                "Tooltip"]& ], {"\<\"At 1% detected\"\>":>($CellContext`c$$[
               "addLS"]["At 1% detected"]; 
              Null), "\<\"At 2% detected\"\>":>($CellContext`c$$["addLS"][
               "At 2% detected"]; 
              Null), "\<\"At 5% detected\"\>":>($CellContext`c$$["addLS"][
               "At 5% detected"]; 
              Null), "\<\"At 10% detected\"\>":>($CellContext`c$$["addLS"][
               "At 10% detected"]; 
              Null), "\<\"At 15% detected\"\>":>($CellContext`c$$["addLS"][
               "At 15% detected"]; 
              Null), "\<\"At 50% detected\"\>":>($CellContext`c$$["addLS"][
               "At 50% detected"]; 
              Null), "\<\"At small change of detected\"\>":>($CellContext`c$$[
               "addLS"]["At small change of detected"]; 
              Null), "\<\"At large change of detected\"\>":>($CellContext`c$$[
               "addLS"]["At large change of detected"]; Null)},
              Appearance->"PopupMenu"],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {"\<\"\"\>", 
            DynamicBox[ToBoxes[
              Column[
               Table[
                Row[
                 With[{$CellContext`j$ = $CellContext`j}, {
                   Button[
                   "X", $CellContext`locks$$ = 
                    Delete[$CellContext`locks$$, $CellContext`j$]], 
                   
                   Part[$CellContext`locks$$, $CellContext`j$, 
                    1]}]], {$CellContext`j, 1, 
                 Length[$CellContext`locks$$]}]], StandardForm],
             ImageSizeCache->{4., {4., 10.}}]},
           {"\<\"\"\>", 
            ItemBox[
             ButtonBox[
              TagBox[
               TooltipBox["\<\"Reshuffle lockdowns\"\>",
                
                "\"Recalculate the epidemics during lockdown, without \
recalculating the original course of epidemics.\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Recalculate the epidemics during lockdown, without \
recalculating the original course of epidemics.", "Tooltip"]& ],
              Appearance->Automatic,
              ButtonFunction:>$CellContext`c$$["locksRedo"],
              Evaluator->Automatic,
              Method->"Preemptive"],
             ContinuousAction -> True,
             Alignment->Center,
             StripOnInput->False]},
           {"\<\"Export:\"\>", 
            TemplateBox[{
              ItemBox[
               ButtonBox[
                TagBox[
                 TooltipBox[
                 "\"All to video\"", 
                  "\"Exports run into .mp4 file. Path to it can be found by \
right-clicking on the output video, choosing \\\"Copy Resource Path\\\" and \
pasting it. \"", LabelStyle -> "TextStyling"], 
                 Annotation[#, 
                  "Exports run into .mp4 file. Path to it can be found by \
right-clicking on the output video, choosing \"Copy Resource Path\" and \
pasting it. ", "Tooltip"]& ], ButtonFunction :> Print[
                  $CellContext`c$$["saveVideo"]], Method -> "Queued", 
                Appearance -> Automatic, Evaluator -> Automatic], Alignment -> 
               Center, ContinuousAction -> True, StripOnInput -> False], 
              ItemBox[
               TagBox[
                TooltipBox[
                 ButtonBox["\"Current stats\"", ButtonFunction :> Print[
                    $CellContext`c$$["saveStats"]], Method -> "Queued", 
                  Appearance -> Automatic, Evaluator -> Automatic], 
                 "\"Export current plot of epidemics into image file. \
Right-click on image and choose \\\"Save Image As...\\\" to save image.\"", 
                 LabelStyle -> "TextStyling"], 
                Annotation[#, 
                 "Export current plot of epidemics into image file. \
Right-click on image and choose \"Save Image As...\" to save image.", 
                 "Tooltip"]& ], Alignment -> Center, ContinuousAction -> True,
                StripOnInput -> False], 
              ItemBox[
               ButtonBox[
                TagBox[
                 TooltipBox[
                 "\"Ensemble stats\"", 
                  "\"Export plot of averaged runs of epidemics into image \
file. Right-click on image and choose \\\"Save Image As...\\\" to save image.\
\"", LabelStyle -> "TextStyling"], 
                 Annotation[#, 
                  "Export plot of averaged runs of epidemics into image file. \
Right-click on image and choose \"Save Image As...\" to save image.", 
                  "Tooltip"]& ], ButtonFunction :> Print[
                  $CellContext`c$$["saveEnsembleStats"]], Method -> "Queued", 
                Appearance -> Automatic, Evaluator -> Automatic], Alignment -> 
               Center, ContinuousAction -> True, StripOnInput -> False]},
             "RowDefault"]}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {Right, Left}},
          GridBoxItemSize->{"Columns" -> {16, Automatic}},
          GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{0.5}}}],
         "Grid"]], 
       TagBox[GridBox[{
          {
           TemplateBox[{
             DynamicBox[
              ToBoxes[
               Refresh[
                If[$CellContext`CommunityQ$$, 
                 If[
                  $CellContext`commEnabled[$CellContext`network$$], 
                  
                  CommunityGraphPlot[$CellContext`graph$$, VertexSize -> 
                   0.02 $CellContext`n$$^(4/5), CommunityBoundaryStyle -> 
                   None, VertexStyle -> 
                   MapIndexed[
                    If[# == 3, Nothing, 
                    First[#2] -> $CellContext`gColors$$[#]]& , 
                    Part[$CellContext`courseOfEpidemics$$, 
                    Min[$CellContext`t$$, 
                    Length[$CellContext`courseOfEpidemics$$]]]]], 
                  
                  CommunityGraphPlot[$CellContext`graph$$, 
                   CommunityBoundaryStyle -> None, VertexStyle -> 
                   MapIndexed[
                    If[# == 3, Nothing, 
                    First[#2] -> $CellContext`gColors$$[#]]& , 
                    Part[$CellContext`courseOfEpidemics$$, 
                    Min[$CellContext`t$$, 
                    Length[$CellContext`courseOfEpidemics$$]]]]]], 
                 
                 Graph[$CellContext`graph$$, VertexStyle -> 
                  MapIndexed[
                   If[# == 3, Nothing, 
                    First[#2] -> $CellContext`gColors$$[#]]& , 
                    Part[$CellContext`courseOfEpidemics$$, 
                    Min[$CellContext`t$$, 
                    Length[$CellContext`courseOfEpidemics$$]]]]]], 
                TrackedSymbols :> {$CellContext`graph$$, \
$CellContext`courseOfEpidemics$$, $CellContext`t$$, $CellContext`gColors$$, \
$CellContext`CommunityQ$$}], StandardForm], SynchronousUpdating -> False], 
             DynamicBox[
              ToBoxes[
               SwatchLegend[
                If[$CellContext`merge2$$, $CellContext`mergeRDcolor, Identity][
                 If[$CellContext`merge$$, $CellContext`mergeDIcolor, Identity][
                  Values[$CellContext`colors]]], 
                If[$CellContext`merge2$$, $CellContext`mergeRDtext, Identity][
                
                 If[$CellContext`merge$$, $CellContext`mergeDItext, Identity][
                 
                  Values[$CellContext`groupAssoc]]], LegendMarkers -> 
                "Bubble", LegendMarkerSize -> 15, LegendLayout -> "Row", 
                LabelStyle -> {FontSize -> 14}], StandardForm]]},
            "Legended",
            DisplayFunction->(GridBox[{{
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}, {
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> Automatic, 
              BaselinePosition -> {1, 1}]& ),
            Editable->True,
            InterpretationFunction->(RowBox[{"Legended", "[", 
               RowBox[{#, ",", 
                 RowBox[{"Placed", "[", 
                   RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
          {
           TemplateBox[{
             DynamicBox[
              ToBoxes[
               Refresh[
                $CellContext`StatPlot[$CellContext`stats$$, 
                 Dynamic[$CellContext`t$$], $CellContext`tmax$$, 
                 Sort[$CellContext`groups$$], 
                 If[Length[$CellContext`locks$$] > 0, 
                  
                  Part[$CellContext`locks$$, All, {2, -1, 
                   1}], $CellContext`locks$$], $CellContext`merge$$, \
$CellContext`merge2$$], 
                TrackedSymbols :> {$CellContext`stats$$, \
$CellContext`locks$$, $CellContext`groups$$, $CellContext`merge$$, \
$CellContext`merge2$$}], StandardForm]], "\"time\""},
            "Labeled",
            DisplayFunction->(GridBox[{{
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}, {
                
                ItemBox[#2, BaseStyle -> 
                 Directive[FontFamily -> "Helvetica", FontSize -> 16], 
                 DefaultBaseStyle -> "LabeledLabel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}, 
              BaselinePosition -> {1, 1}]& ),
            InterpretationFunction->(RowBox[{"Labeled", "[", 
               RowBox[{#, ",", 
                 RowBox[{"{", #2, "}"}], ",", 
                 RowBox[{"{", "Bottom", "}"}], ",", 
                 RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", 
                 RowBox[{"Spacings", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}]}], 
               "]"}]& )]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]},
      {
       PanelBox[
        InterpretationBox[
         StyleBox[GridBox[{
            {
             AnimatorBox[Dynamic[$CellContext`t$$], {1, 
               Dynamic[$CellContext`tmax$$], 1},
              AnimationRepetitions->1,
              AnimationRunTime->0.,
              AnimationRunning->False,
              
              AppearanceElements->{
               "ProgressSlider", "PlayPauseButton", "ResetButton", 
                "StepLeftButton", "StepRightButton", "FasterSlowerButtons"},
              DisplayAllSteps->True,
              ImageSize->850], 
             InputFieldBox[Dynamic[$CellContext`t$$],
              Appearance->"Frameless",
              FieldSize->{{5, 10}, {1, 2}}]}
           },
           AutoDelete->False,
           BaselinePosition->{{1, 1}, Axis},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.7]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Deployed->True,
          StripOnInput->False,
          FontFamily:>CurrentValue["ControlsFontFamily"]],
         Animator[
          Dynamic[$CellContext`t$$], {1, 
           Dynamic[$CellContext`tmax$$], 1}, 
          AppearanceElements -> {
           "ProgressSlider", "PlayPauseButton", "ResetButton", 
            "StepLeftButton", "StepRightButton", "FasterSlowerButtons"}, 
          AnimationRunning -> False, AnimationRepetitions -> 1, 
          DisplayAllSteps -> True, ImageSize -> 850, DisplayAllSteps -> True, 
          Appearance -> "Labeled"]]], "\[SpanFromLeft]"}
     },
     AutoDelete->False,
     Editable->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  TrackedSymbols :> {},
  DynamicModuleValues:>{{DownValues[$CellContext`c$$] = {HoldPattern[
         $CellContext`c$$["all"]] :> ($CellContext`c$$[
         "graph"]; $CellContext`c$$["initial"]; $CellContext`c$$[
         "simulation"]; $CellContext`c$$["locksRedo"]; Null), HoldPattern[
         $CellContext`c$$["evo"]] :> ($CellContext`c$$[
         "simulation"]; $CellContext`c$$["locksRedo"]; Null), HoldPattern[
         $CellContext`c$$["graph"]] :> ($CellContext`graph$$ = Graph[
          $CellContext`GraphPostprocess[
           $CellContext`graphs[$CellContext`network$$][$CellContext`n$$, \
$CellContext`\[Rho]$$, $CellContext`k$$]], BaseStyle -> EdgeForm[], 
          VertexSize -> 0.6, 
          ImageSize -> {$CellContext`previewSize, $CellContext`previewSize}, 
          VertexStyle -> $CellContext`colors[3], EdgeStyle -> Lighter[
            $CellContext`colors[3]], ImageMargins -> 0, ImagePadding -> 0]), 
       HoldPattern[
         $CellContext`c$$["initial"]] :> ($CellContext`initialList$$ = 
         ConstantArray[3, 
           VertexCount[$CellContext`graph$$]]; 
        Do[Part[$CellContext`initialList$$, $CellContext`i] = 
          1, {$CellContext`i, 
           RandomChoice[
            Range[
             VertexCount[$CellContext`graph$$]], 
            Ceiling[$CellContext`p$$]]}]), HoldPattern[
         $CellContext`c$$["locksRedo"]] :> (
        If[Length[$CellContext`locks$$] > 
          0, $CellContext`locksTmp$$ = 
           Part[$CellContext`locks$$, All, 
             1]; $CellContext`locks$$ = {}; $CellContext`locks$$ = {}; 
          Map[($CellContext`c$$["addLS"][#]; 
            Null)& , $CellContext`locksTmp$$]]; Null), HoldPattern[
         $CellContext`c$$["off"]] :> ($CellContext`status$$ = False), 
       HoldPattern[
         $CellContext`c$$["on"]] :> ($CellContext`status$$ = True), 
       HoldPattern[
         $CellContext`c$$["pop"]] :> ($CellContext`c$$[
         "initial"]; $CellContext`c$$["simulation"]; $CellContext`c$$[
         "locksRedo"]; Null), HoldPattern[
         $CellContext`c$$[
         "refreshColors"]] :> ($CellContext`gColors$$ = $CellContext`colors; 
        If[$CellContext`merge$$, $CellContext`gColors$$[1] = Blend[{
              $CellContext`colors[1], 
              $CellContext`colors[2]}]; $CellContext`gColors$$[
            2] = $CellContext`gColors$$[1]; Null]; 
        If[$CellContext`merge2$$, $CellContext`gColors$$[4] = Blend[{
              $CellContext`colors[4], 
              $CellContext`colors[5]}]; $CellContext`gColors$$[
            5] = $CellContext`gColors$$[4]; Null]; Null), HoldPattern[
         $CellContext`c$$["saveEnsembleStats"]] :> Rasterize[
         Legended[
          Labeled[
           $CellContext`StatPlot[Total[
              Table[
              PrintTemporary[
                "Running simulation number: ", $CellContext`ii$$, 
                 "/", $CellContext`ensembleSize]; Transpose[
                 Map[$CellContext`PadStats[#, $CellContext`tmax$$]& , 
                  Map[$CellContext`statify[#]/$CellContext`size$$& , 
                   Part[
                    $CellContext`simulation[$CellContext`graph$$, \
$CellContext`initialList$$, $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
                    None, $CellContext`hardtmax], 
                    1]]]], {$CellContext`ii$$, \
$CellContext`ensembleSize}]]/$CellContext`ensembleSize, 
            0, $CellContext`tmax$$, 
            Sort[$CellContext`groups$$], 
            If[
            Length[$CellContext`locks$$] > 
             0, $CellContext`locksTmp$$ = Part[$CellContext`locks$$, All, 1]; 
             Table[{1, Total[
                  Table[
                  PrintTemporary[
                    "Running ", $CellContext`strat, 
                    " simulation number: ", $CellContext`ii$$, 
                    "/", $CellContext`ensembleSize]; Transpose[
                    Map[$CellContext`PadStats[#, $CellContext`tmax$$]& , 
                    Map[$CellContext`statify[#]/$CellContext`size$$& , 
                    Part[
                    $CellContext`simulation[$CellContext`graph$$, \
$CellContext`initialList$$, $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
                    $CellContext`lsStrategies[$CellContext`strat], \
$CellContext`hardtmax], 
                    1]]]], {$CellContext`ii$$, \
$CellContext`ensembleSize}]]/$CellContext`ensembleSize, $CellContext`strat}, \
{$CellContext`strat, $CellContext`locksTmp$$}], $CellContext`locks$$], \
$CellContext`merge$$, $CellContext`merge2$$], {"time"}, {Bottom}, 
           ImageMargins -> 0, FrameMargins -> 0, Spacings -> {0, 1}, 
           LabelStyle -> 
           Directive[FontFamily -> "Helvetica", FontSize -> 16]], 
          Placed[
           SwatchLegend[
            If[$CellContext`merge2$$, $CellContext`mergeRDcolor, Identity][
             If[$CellContext`merge$$, $CellContext`mergeDIcolor, Identity][
              Values[$CellContext`colors]]], 
            If[$CellContext`merge2$$, $CellContext`mergeRDtext, Identity][
             If[$CellContext`merge$$, $CellContext`mergeDItext, Identity][
              Values[$CellContext`groupAssoc]]], LegendMarkers -> "Bubble", 
            LegendMarkerSize -> 15, LegendLayout -> "Row", 
            LabelStyle -> {FontSize -> 14}], Top]], ImageResolution -> 72], 
       HoldPattern[
         $CellContext`c$$["saveStats"]] :> Rasterize[
         Legended[
          Labeled[
           $CellContext`StatPlot[$CellContext`stats$$, 0, $CellContext`tmax$$, 
            Sort[$CellContext`groups$$], 
            If[Length[$CellContext`locks$$] > 0, 
             
             Part[$CellContext`locks$$, All, {2, -1, 
              1}], $CellContext`locks$$], $CellContext`merge$$, \
$CellContext`merge2$$], {"time"}, {Bottom}, ImageMargins -> 0, FrameMargins -> 
           0, Spacings -> {0, 1}, LabelStyle -> 
           Directive[FontFamily -> "Helvetica", FontSize -> 16]], 
          Placed[
           SwatchLegend[
            If[$CellContext`merge2$$, $CellContext`mergeRDcolor, Identity][
             If[$CellContext`merge$$, $CellContext`mergeDIcolor, Identity][
              Values[$CellContext`colors]]], 
            If[$CellContext`merge2$$, $CellContext`mergeRDtext, Identity][
             If[$CellContext`merge$$, $CellContext`mergeDItext, Identity][
              Values[$CellContext`groupAssoc]]], LegendMarkers -> "Bubble", 
            LegendMarkerSize -> 15, LegendLayout -> "Row", 
            LabelStyle -> {FontSize -> 14}], Top]], ImageResolution -> 72], 
       HoldPattern[
         $CellContext`c$$["saveVideo"]] :> VideoGenerator[Rasterize[
          Column[{
            Legended[
             
             Graph[$CellContext`graph$$, VertexStyle -> 
              MapIndexed[
               If[# == 3, Nothing, First[#2] -> $CellContext`gColors$$[#]]& , 
                
                Part[$CellContext`courseOfEpidemics$$, 
                 Round[$CellContext`framerate # + 1]]]], 
             Placed[
              SwatchLegend[
               If[$CellContext`merge2$$, $CellContext`mergeRDcolor, Identity][
               
                If[$CellContext`merge$$, $CellContext`mergeDIcolor, Identity][
                
                 Values[$CellContext`colors]]], 
               If[$CellContext`merge2$$, $CellContext`mergeRDtext, Identity][
                If[$CellContext`merge$$, $CellContext`mergeDItext, Identity][
                 Values[$CellContext`groupAssoc]]], LegendMarkers -> "Bubble",
                LegendMarkerSize -> 15, LegendLayout -> "Row", 
               LabelStyle -> {FontSize -> 14}], Bottom]], 
            Labeled[
             $CellContext`StatPlot[$CellContext`stats$$, 
              Round[$CellContext`framerate # + 1], $CellContext`tmax$$, 
              Sort[$CellContext`groups$$], 
              If[Length[$CellContext`locks$$] > 0, 
               
               Part[$CellContext`locks$$, All, {2, -1, 
                1}], $CellContext`locks$$], $CellContext`merge$$, \
$CellContext`merge2$$], {"time"}, {Bottom}, ImageMargins -> 0, FrameMargins -> 
             0, Spacings -> {0, 1}, LabelStyle -> 
             Directive[FontFamily -> "Helvetica", FontSize -> 16]]}], 
          ImageResolution -> 72]& , 
         Length[$CellContext`courseOfEpidemics$$]/$CellContext`framerate, 
         FrameRate -> $CellContext`framerate], HoldPattern[
         $CellContext`c$$["simulation"]] :> ($CellContext`c$$[
         "on"]; ({$CellContext`courseOfEpidemics$$, $CellContext`ls$$, \
$CellContext`size$$, $CellContext`tmax$$} = \
$CellContext`simulation[$CellContext`graph$$, $CellContext`initialList$$, \
$CellContext`\[Lambda]$$, $CellContext`g$$, $CellContext`d$$, \
$CellContext`o$$, $CellContext`detCanInfect$$, 
            None, $CellContext`hardtmax]; $CellContext`stats$$ = Transpose[
            
            Map[$CellContext`statify[#]/$CellContext`size$$& , \
$CellContext`courseOfEpidemics$$]]; Null); $CellContext`c$$["off"]; Null)}, 
     SubValues[$CellContext`c$$] = {HoldPattern[
         $CellContext`c$$["addLS"]["At 10% detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At 10% detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 10], $CellContext`history -> {}], $CellContext`hardtmax]}& \
)[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 10], $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null), HoldPattern[
         $CellContext`c$$["addLS"]["At 15% detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At 15% detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              3, 20], $CellContext`history -> {}], $CellContext`hardtmax]}& \
)[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              3, 20], $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null), HoldPattern[
         $CellContext`c$$["addLS"]["At 1% detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At 1% detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 100], $CellContext`history -> {}], $CellContext`hardtmax]}& )[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 100], $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null), HoldPattern[
         $CellContext`c$$["addLS"]["At 2% detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At 2% detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 50], $CellContext`history -> {}], $CellContext`hardtmax]}& \
)[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 50], $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null), HoldPattern[
         $CellContext`c$$["addLS"]["At 50% detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At 50% detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 2], $CellContext`history -> {}], $CellContext`hardtmax]}& )[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 2], $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null), HoldPattern[
         $CellContext`c$$["addLS"]["At 5% detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At 5% detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 20], $CellContext`history -> {}], $CellContext`hardtmax]}& \
)[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (
              Count[#, 2]/#3& ), $CellContext`threshold -> 
             Rational[
              1, 20], $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null), HoldPattern[
         $CellContext`c$$["addLS"]["At large change of detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At large change of detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            
            Association[$CellContext`Fun -> (If[
              Length[#2] > 0, Count[#, 2]/#3 - Part[#2, -1, 2], 
               Count[#, 2]/#3]& ), $CellContext`threshold -> 
             0.1, $CellContext`history -> {}], $CellContext`hardtmax]}& )[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (If[
              Length[#2] > 0, Count[#, 2]/#3 - Part[#2, -1, 2], 
               Count[#, 2]/#3]& ), $CellContext`threshold -> 
             0.1, $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null), HoldPattern[
         $CellContext`c$$["addLS"]["At small change of detected"]] :> (
        AppendTo[$CellContext`locks$$, 
          ({"At small change of detected", 
           Part[#, 1], 
           $CellContext`simulation[$CellContext`graph$$, 
            
            Part[#, 2], $CellContext`\[Lambda]$$, $CellContext`g$$, \
$CellContext`d$$, $CellContext`o$$, $CellContext`detCanInfect$$, 
            
            Association[$CellContext`Fun -> (If[
              Length[#2] > 0, Count[#, 2]/#3 - Part[#2, -1, 2], 
               Count[#, 2]/#3]& ), $CellContext`threshold -> 
             0.01, $CellContext`history -> {}], $CellContext`hardtmax]}& )[
           $CellContext`FirstLockdownStep[
            
            Association[$CellContext`Fun -> (If[
              Length[#2] > 0, Count[#, 2]/#3 - Part[#2, -1, 2], 
               Count[#, 2]/#3]& ), $CellContext`threshold -> 
             0.01, $CellContext`history -> {}], \
$CellContext`courseOfEpidemics$$, $CellContext`size$$]]]; AppendTo[
          Part[$CellContext`locks$$, -1], 
          Transpose[
           Map[$CellContext`statify[#]/$CellContext`size$$& , 
            Part[
             Part[
              Part[$CellContext`locks$$, -1], 3], 1]]]]; Null)}}},
  Initialization:>({$CellContext`\[Rho]Tooltip = 
     Association[
      "Grid" -> "Not available in this network type", "Scale-Free" -> 
       "Not available in this network type", "Small-World (WS)" -> 
       "Probability of edge rewiring during network construction. Makes \
possibility of long range connections.", "Small-World (KM)" -> 
       "Probability of changing the edges that connect vertices during \
construction.", "Holed Grid" -> "Not available in this network type", 
       "Random" -> "Not available in this network type", "k-Grid" -> 
       "Not available in this network type", "2k-regular" -> 
       "Not available in this network type"], $CellContext`rhoEnabled = 
     Association[
      "Grid" -> False, "Scale-Free" -> False, "Small-World (WS)" -> True, 
       "Small-World (KM)" -> True, "Holed Grid" -> False, "Random" -> False, 
       "k-Grid" -> False, "2k-regular" -> False], $CellContext`kTooltip = 
     Association[
      "Grid" -> "Not available in this network type", "Scale-Free" -> 
       "Influences how many edges each new vertex will have during network \
construction. ", "Small-World (WS)" -> 
       "Half the mean number of target neighbours.", "Small-World (KM)" -> 
       "Not available in this network type", "Holed Grid" -> 
       "Number of ruby-shaped holes (disk in manhattan-like metric) in the \
Grid Graph. Their size is automatically adjusted to their count.", "Random" -> 
       "Mean number of edges per vertex, before discarding isolated nodes.", 
       "k-Grid" -> "Connect all neighbours up to distance k.", "2k-regular" -> 
       "Connect all neighbours up to distance k."], $CellContext`kEnabled = 
     Association[
      "Grid" -> False, "Scale-Free" -> True, "Small-World (WS)" -> True, 
       "Small-World (KM)" -> False, "Holed Grid" -> True, "Random" -> True, 
       "k-Grid" -> True, "2k-regular" -> True], $CellContext`cost[
       Pattern[$CellContext`val, 
        Blank[]], {
        Pattern[$CellContext`min, 
         Blank[]], 
        Pattern[$CellContext`max, 
         Blank[]], 
        Pattern[$CellContext`step, 
         Blank[]]}] := Min[
       Max[
        Round[$CellContext`val, $CellContext`step], $CellContext`min], \
$CellContext`max], 
     Attributes[$CellContext`j$] = {Temporary}, $CellContext`commEnabled = 
     Association[
      "Grid" -> False, "Scale-Free" -> True, "Small-World (WS)" -> True, 
       "Small-World (KM)" -> True, "Holed Grid" -> False, "Random" -> True, 
       "k-Grid" -> False, "2k-regular" -> False], $CellContext`mergeRDcolor[{
        Pattern[$CellContext`rest, 
         BlankNullSequence[]], 
        Pattern[$CellContext`rec, 
         Blank[]], 
        Pattern[$CellContext`dead, 
         Blank[]]}] := {$CellContext`rest, 
       Blend[{$CellContext`rec, $CellContext`dead}]}, \
$CellContext`mergeDIcolor[{
        Pattern[$CellContext`inf, 
         Blank[]], 
        Pattern[$CellContext`det, 
         Blank[]], 
        Pattern[$CellContext`rest, 
         BlankNullSequence[]]}] := {
       Blend[{$CellContext`inf, $CellContext`det}], $CellContext`rest}, \
$CellContext`colors = 
     Association[
      1 -> RGBColor[1, 0, 0], 2 -> RGBColor[1, 0.6666666666666666, 1/3], 3 -> 
       RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
       4 -> RGBColor[0.54, 1., 0.94], 5 -> 
       GrayLevel[0]], $CellContext`mergeRDtext[{
        Pattern[$CellContext`rest, 
         BlankNullSequence[]], 
        Pattern[$CellContext`rec, 
         Blank[]], 
        Pattern[$CellContext`dead, 
         Blank[]]}] := {$CellContext`rest, 
       StringJoin[$CellContext`rec, 
        "+", $CellContext`dead]}, $CellContext`mergeDItext[{
        Pattern[$CellContext`inf, 
         Blank[]], 
        Pattern[$CellContext`det, 
         Blank[]], 
        Pattern[$CellContext`rest, 
         BlankNullSequence[]]}] := {
       StringJoin[$CellContext`inf, 
        "+", $CellContext`det], $CellContext`rest}, $CellContext`groupAssoc = 
     Association[
      1 -> "inf", 2 -> "det", 3 -> "sus", 4 -> "rec", 5 -> 
       "dead"], $CellContext`StatPlot[
       Pattern[$CellContext`stats$, 
        Blank[]], 
       Pattern[$CellContext`i$, 
        Blank[]], 
       Pattern[$CellContext`tmax$, 
        Blank[]], 
       Pattern[$CellContext`groups$, 
        Blank[]], 
       Optional[
        Pattern[$CellContext`lds$, 
         Blank[]], {}], 
       Pattern[$CellContext`merge$, 
        Blank[]], 
       Pattern[$CellContext`merge2$, 
        Blank[]]] := Show[
       ListLinePlot[
        If[$CellContext`merge2$, $CellContext`mergeRD, Identity][
         If[$CellContext`merge$, $CellContext`mergeDI, Identity][
          Part[$CellContext`stats$, $CellContext`groups$]]], PlotStyle -> 
        If[$CellContext`merge2$, $CellContext`mergeRDcolor, Identity][
          If[$CellContext`merge$, $CellContext`mergeDIcolor, Identity][
           Part[
            Values[$CellContext`colors], $CellContext`groups$]]], 
        PlotRange -> {{1, $CellContext`tmax$}, {0, 1}}, AspectRatio -> 0.6, 
        ImageSize -> {$CellContext`previewSize, $CellContext`previewSize 0.6},
         Epilog -> {Thick, Dashed, 
          Line[{{$CellContext`i$, 0}, {$CellContext`i$, 1}}]}, Frame -> True, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> $CellContext`ticks, FrameStyle -> Directive[Black, 14]], 
       Apply[Sequence, 
        Table[
         ListLinePlot[
          If[$CellContext`merge2$, $CellContext`mergeRD, Identity][
           If[$CellContext`merge$, $CellContext`mergeDI, Identity][
            Part[
             Part[
              Part[$CellContext`lds$, $CellContext`k$$], 
              2], $CellContext`groups$]]], DataRange -> {
            Part[
             Part[$CellContext`lds$, $CellContext`k$$], 1], Part[
              Part[$CellContext`lds$, $CellContext`k$$], 1] + Length[
              Part[
               Part[
                Part[$CellContext`lds$, $CellContext`k$$], 2], 1]] - 1}, 
          PlotStyle -> Map[Directive[
             Part[{Dotted, Dashed, DotDashed}, 
              Mod[$CellContext`k$$, 2, 1]], 
             Nest[Lighter, #, $CellContext`k$$]]& , 
            If[$CellContext`merge2$, $CellContext`mergeRDcolor, Identity][
             If[$CellContext`merge$, $CellContext`mergeDIcolor, Identity][
              Part[
               Values[$CellContext`colors], $CellContext`groups$]]]], 
          PlotLegends -> Placed[{
             Part[
              Part[$CellContext`lds$, $CellContext`k$$], 3]}, {
             Part[{Left, Right}, 
              Mod[$CellContext`k$$, 2, 1]], Top}]], {$CellContext`k$$, 1, 
          Length[$CellContext`lds$]}]]], $CellContext`mergeRD[{
        Pattern[$CellContext`rest, 
         BlankNullSequence[]], 
        Pattern[$CellContext`rec, 
         Blank[]], 
        Pattern[$CellContext`dead, 
         Blank[]]}] := {$CellContext`rest, $CellContext`rec + \
$CellContext`dead}, $CellContext`mergeDI[{
        Pattern[$CellContext`inf, 
         Blank[]], 
        Pattern[$CellContext`det, 
         Blank[]], 
        Pattern[$CellContext`rest, 
         BlankNullSequence[]]}] := {$CellContext`inf + $CellContext`det, \
$CellContext`rest}, $CellContext`previewSize = 
     500, $CellContext`ticks = {{
       None, {{0, "0%"}, {0.1, "10%"}, {0.2, "20%"}, {0.3, "30%"}, {
         0.4, "40%"}, {0.5, "50%"}, {0.6, "60%"}, {0.7, "70%"}, {
         0.8, "80%"}, {0.9, "90%"}, {1, "100%"}}}, {
       Automatic, Automatic}}}; ($CellContext`n$$ = 
     64; $CellContext`network$$ = "Grid"; $CellContext`\[Rho]$$ = 
     0.2; $CellContext`k$$ = 2; $CellContext`p$$ = 3; $CellContext`t$$ = 
     1; $CellContext`\[Lambda]$$ = 0.2; $CellContext`o$$ = 
     0.05; $CellContext`d$$ = 0.005; $CellContext`g$$ = 
     0.01; $CellContext`detCanInfect$$ = 
     True; $CellContext`groups$$ = {1, 2, 3, 4, 
      5}; $CellContext`tmax$$ = $CellContext`hardtmax; $CellContext`merge$$ = 
     False; $CellContext`merge2$$ = False; $CellContext`c$$[
     "refreshColors"]; $CellContext`c$$["all"]))]], "Output",
 CellChangeTimes->{3.82293046502305*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"a4b2ea38-c343-47cb-a702-a5b6da35deae"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"CloudPublishPath"->"Experiments.nb"},
Magnification:>1. Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6c7ef81d-2ccf-40f6-8db5-73cbeda1c6af"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 120, 1, 67, "Section",ExpressionUUID->"2daafac9-dd3f-47a6-8226-e0800096b956",
 CellID->296662264],
Cell[703, 25, 174, 3, 28, "Input",ExpressionUUID->"418b604f-03a8-419b-8d72-c96d61e7140d",
 CellID->693897941],
Cell[CellGroupData[{
Cell[902, 32, 102, 1, 53, "Subsection",ExpressionUUID->"40225388-41b4-40a1-bccd-344d6ac3b167",
 CellID->86006341],
Cell[1007, 35, 19292, 484, 1463, "Input",ExpressionUUID->"6e4ea6bc-4f04-4f8a-a766-5b6dee44e2b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1989140556]
}, Open  ]],
Cell[CellGroupData[{
Cell[20336, 524, 106, 1, 53, "Subsection",ExpressionUUID->"0034a69a-780d-4abf-a56b-0cc11f1cf442",
 CellID->712631908],
Cell[20445, 527, 13403, 343, 924, "Input",ExpressionUUID->"e1aa20d1-a09e-4953-973f-84f38367dcd6",
 CellID->1446934205]
}, Closed]],
Cell[CellGroupData[{
Cell[33885, 875, 117, 1, 37, "Subsection",ExpressionUUID->"3fea614d-76a3-44bf-9948-7b1b442e61b7",
 CellID->374282962],
Cell[34005, 878, 25104, 650, 1522, "Input",ExpressionUUID->"3a2ee651-5a95-4dfa-a8ec-5b3129f6e439",
 CellID->564788437],
Cell[59112, 1530, 126, 2, 30, "Input",ExpressionUUID->"0a17a83c-08cc-41e1-b641-0fb46fff1bfb",
 CellID->1708012250]
}, Closed]],
Cell[CellGroupData[{
Cell[59275, 1537, 122, 1, 37, "Subsection",ExpressionUUID->"83c1ac63-4e3b-4094-b2f6-584bc335eea6",
 CellID->594140271],
Cell[CellGroupData[{
Cell[59422, 1542, 85742, 1948, 4472, "Input",ExpressionUUID->"51a44a3f-ad0e-46da-a77e-94c697082644",
 CellID->692615483],
Cell[145167, 3492, 154533, 3319, 996, "Output",ExpressionUUID->"a4b2ea38-c343-47cb-a702-a5b6da35deae"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

